<% if(theme.fun_features.typing.enable && in_scope(theme.fun_features.typing.scope) && page.subtitle !== false) { %>
    <%- js_ex(theme.static_prefix.typed, '/typed.min.js') %>
    <script>
      (function (window, document) {
        var typing = Fluid.plugins.typing;
        var subtitle = document.getElementById('subtitle');
        if (!subtitle || !typing) {
          return;
        }
        var text = subtitle.getAttribute('data-typed-text');
          <% if (is_home() && theme.index.slogan.api && theme.index.slogan.api.enable) { %>
        jQuery.ajax({
          type: '<%= theme.index.slogan.api.method %>',
          url: '<%- theme.index.slogan.api.url %>',
          headers: <%- JSON.stringify(theme.index.slogan.api.headers || {}) %>,
          dataType: 'json',
          success: function (result) {
            // 打字机输出内容
            var apiText;
            // 一言、来源作品、发言人
            var hitokoto, from, fromWho;
            // 从一言接口得到的JSON结果
            if (result) {
              // 需要的结果字段名，取决于_config[.主题名称].yml中的配置
              var keys = '<%= theme.index.slogan.api.keys %>'.split(',');
              if (result instanceof Array) {
                // 得到 去掉外层{}的 数据
                result = result[0];
              }
              // 取出实际展示的字段
              for (const k of keys) {
                var value = result[k];
                if (typeof value === 'string') {
                  if (hitokoto == null) {
                    hitokoto = value;
                  } else if (from == null) {
                    from = value
                  } else if (fromWho == null) {
                    fromWho = value;
                  }
                } else if (value instanceof Object) {
                  result = value;
                }
              }
              // 头像
              apiText = "<img src='/img/avatar-gray.png' class='my-avatar' />";
              // 样式
              apiText += '<p style="font-size: 30px; text-align: center">『&#12288;' + hitokoto + '』</p>' +
              '<p style="margin-top: 15px; text-align: right; font-size: 24px; color: #e0e0e0">——';
              // 一言的发言人可能未知
              if (fromWho != null) {
                apiText += fromWho;
              }
              apiText += '「' + from + '」</p>';
            }
            apiText ? typing(apiText) : typing(text);
          },
          error: function (xhr, status, error) {
            if (error) {
              console.error('Failed to request <%= theme.index.slogan.api.url %>:', error);
            }
            typing(text);
          }
        })
          <% } else { %>
        typing(text);
          <% } %>
      })(window, document);
    </script>
<% } %>
