<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>日志25-8-25</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-25/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-25/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《罪与罚》2.1</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>出差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-24</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-24/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-24/</url>
    
    <content type="html"><![CDATA[<p>出差期间休息日最好也去上班，否则差补会减半，不过休息日上班可以晚点去</p><span id="more"></span><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol><li>催电工给42拉设备上电、贴标签</li><li>配合C公司进行联调</li></ol><p>今晚打车遇见的司机和我一样大，他完全颠倒了昼夜节律，夜里跑车单价高</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>出差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-8-23</title>
    <link href="/%E5%91%A8%E5%BF%9725-8-23/"/>
    <url>/%E5%91%A8%E5%BF%9725-8-23/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《罪与罚》1.7<br>主角最终还是动手了，但令我感到意外的是这件事情居然只花了1小节来讲，并且整个过程的语言描述十分简单</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>今天开始联调了，联调其实就是测试，看看供应商的系统能否正常运行<br>今天测试的比较少：人工站OP010~OP040</p><h1 id="周志"><a href="#周志" class="headerlink" title="周志"></a>周志</h1><h2 id="本阶段我学到了什么？"><a href="#本阶段我学到了什么？" class="headerlink" title="本阶段我学到了什么？"></a>本阶段我学到了什么？</h2><ol><li>PACK线的大致业务逻辑、核心概念</li><li>各个供应商、部门人员之间的合作关系</li><li>项目前期的准备工作：上电、拉网线、配IP，杀毒、加域</li><li>MES系统的使用：工艺、配方</li></ol><h2 id="本阶段我发现了什么问题？"><a href="#本阶段我发现了什么问题？" class="headerlink" title="本阶段我发现了什么问题？"></a>本阶段我发现了什么问题？</h2><ol><li>对现场项目的业务逻辑缺乏总体性的认识</li><li>不了解项目代码，项目代码庞大，没有时间看、</li><li>现场没网，不利于学习</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>与前辈交流</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><ol><li>熟悉41拉项目代码</li><li>学习PACK线业务</li><li>解决常见的问题</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
      <tag>出差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-22</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-22/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-22/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《罪与罚》1.4 1.5 1.6</p><ol><li>主角做了个梦：有个马夫活活将自己的小马抽死（吃瓜群众有同情怜悯的、有调侃娱乐的），唯独主角一人上前为之痛哭流涕</li><li>主角最近似乎有些迷信，他刚冒出“做大事”的念头，就听到了一个军官和一个青年的谈话（青年与主角的价值观相同，即生命的价值可以衡量并且可以为了多数人的光明未来而驱逐一些肮脏的害虫）；主角还听闻了一个千载难逢的重大时机：晚上7点，老太婆独守空房（这下不得不动手了&#x2F;doge）</li><li>这件大事的做与否对主角来说还是有些难以决断，即使是谋划好了做事思路，已经在行动的路上时还是有些犹豫、紧张</li></ol><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol><li>写配方</li><li>发布、更新安装包的方法</li><li>更新各个人工&#x2F;自动站的源代码<br>今天22：30下的班</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>出差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-21</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-21/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-21/</url>
    
    <content type="html"><![CDATA[<p>使命宣言：无论环境如何，我必须努力找机会提升自己：打起精神、不要产生负面情绪，勤思考。</p><span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《罪与罚》<br>1.2 主角听一个有文化的贫穷男人讲述自己的故事；说实话我对这个路人的一贫如洗一点兴趣也没有，我感觉这番剧情是为了推动主角“做大事”的进度<br>1.3 主角的妈妈寄了一封信过来，其文本内容描述得很美好（嫁给他能摆脱贫困、能帮助家庭、能过上美好生活），但主角越看越失望，因为他很清楚对方的人格，他绝不允许妹妹为了自己而牺牲</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol><li>劳保鞋穿得极其难受（鞋垫太硬），稍微站一会儿就会觉得脚痛<ol><li>郁哥今天也来了现场，告诉我要买劳保鞋垫</li><li>中午还带我们出去改善了一下伙食（“食堂口味重是因为烧的难吃，只能多放点盐了”，好像确实有这道理）</li><li>今天是九点半下的班，听说这还算早的，过两天联调估计得凌晨1~2点了（联调从来没顺利过）</li></ol></li><li>和电工排查网络问题，最终原因居然是路由器其中一个插口上的线莫名其妙被拔了</li><li>了解PACK线业务流程</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>出差</tag>
      
      <tag>日志，</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-20</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-20/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-20/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《高效能人士的七个习惯》<br>今天阅读了第二个习惯：<strong>以终为始</strong>，在看这一章节时我发现许多需要思考和时常提醒自己的点。</p><ol><li>你到底想成为什么样的人？这个问题必须立刻想清楚<ol><li>我希望自己能够均衡发展各项能力，成为一个多面手</li><li>专业技能：我是一名程序员，技术自然是首当其冲的</li><li>身体素质：我想具备健壮的肉体，这包括身体机能、内脏健康</li><li>艺术：即使我已经几个月没弹钢琴了，但是我依旧非常渴望能够亲自演奏喜欢的音乐，待工作稳定之后，我一定会继续练习！</li><li>精神世界：我想通过阅读来完整自己的心灵，成功励志、心理学、文学是我依次关注的书籍类别</li></ol></li><li>明确目标之后，要撰写使命宣言，今后的行为准则必须参考使命宣言</li><li>一个人具有多重身份，工作常常占据了一个人的绝大部分时间，如何维持各个关系之间的平衡？<br> 第二个习惯值得我花几天消化，因此我明天不会阅读下一个习惯。</li></ol><p>《罪与罚》</p><p>前几个月买了纸质版，但只读了一点，今天重新开始阅读电子版，刚开始的内容就让人头大：俄国人的名字怎么这么长啊？！</p><p>第一部分——第一章节，以后简称1.1</p><p>书的前言就告诉你了这本书讲了什么故事。</p><p>1.1讲述了主人公的处境，并且已经有了“做一件大事的想法”，1.1的最后 以主人公 遇见一个贫穷的文官并开始与之交流 结束</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>正式出差工作的第一天，今天是真的难忘了……</p><ol><li><strong>安全培训</strong><ul><li>C公司要求所有供应商初次进入厂区前进行（之前已经在手机上做过的）安全培训</li><li>培训完后再次考试（相同的题目），100分才给过</li></ul></li><li><strong>最难忘的打车经历</strong><ul><li>因为没带身份证和鞋子（劳保鞋现在只能在厂区穿了……），就打了车，真是前所未有的经历：</li><li>为了方便报销，用的钉钉平台上的美团企业版，这东西定位不太准，司机师傅和我打了好几通电话，他多跑了5公里，终于接到我了，重点是车上他跟我讲的一些跑车多年的心得：<ul><li>APP定位不准没关系，你退出重进，手动指定上车地点，多操作几次就能精准定位了</li><li>网约车平台不会接3KM之外的乘客订单，你如果打不到车，可以先把点位放在远一点的、确保能打到车的地方，然后直接给司机打电话、报手机尾号，直接让他在指定地点开始计费，这样你多花点钱就能打到车了</li><li>载客上高速，在高速公路的刚开始尽可能把速度提上去，这个时候<strong>关闭定位系统</strong>，接着尽可能把车速降下来，等到快下告诉了，再把车速提高到刚上高速的速度，然后<strong>打开定位系统</strong>，这样就能钻平台的空子，多赚点钱了</li></ul></li></ul></li><li><strong>厂区规约</strong><ul><li>进场要给手机封膜（防止你拍照），被发现没封就是罚款￥10000，如果拍照了那就是10倍：￥100000</li></ul></li><li><strong>工作详情</strong><ul><li>环境：恒温车间，但是手机没信号，走到靠窗位置也就1~2格，车间没有坐的地方，我一天下来走了20000步，食堂几乎都是12&#x2F;15元的套餐（估计大部分单位的餐补就是这个价）；这个价格，这个量，回想起来，本部的伙食是真不错啊……</li><li>内容：初来乍到，熟悉环境，基本没干啥活；电脑的配置都很高，但是都只有最基本的开发环境，而且没有网络（没法用AI了……）。</li></ul></li><li><strong>下班回家</strong><ul><li>第一天出差，下班比较早21：30；是的、没错、我一点也不惊讶，这比较早！</li><li>打车回酒店，这次的司机居然是女性，头一回见！</li></ul></li></ol><h2 id="讲解大纲"><a href="#讲解大纲" class="headerlink" title="讲解大纲"></a>讲解大纲</h2><blockquote><p>因为出差去了，所以今天并没有进行技术分享，以下内容是之前学习时记录的想要在今天讲的</p></blockquote><h3 id="React"><a href="#React" class="headerlink" title="React"></a>React</h3><h4 id="双重弹窗"><a href="#双重弹窗" class="headerlink" title="双重弹窗"></a>双重弹窗</h4><p>前提：开启了 严格模式<br>增加条件变量，根据该变量，控制弹窗是否显示</p><h4 id="控件封装"><a href="#控件封装" class="headerlink" title="控件封装"></a>控件封装</h4><p>将页面中的表单输入控件封装成可复用的组件，以避免页面中出现大量的属性声明代码</p><h4 id="原子化CSS"><a href="#原子化CSS" class="headerlink" title="原子化CSS"></a>原子化CSS</h4><ol><li>Uno CSS【实际使用】</li><li>Tailwind CSS【查阅文档】</li></ol><h3 id="WPF"><a href="#WPF" class="headerlink" title="WPF"></a>WPF</h3><p>WPF理论核心：</p><ol><li>依赖对象&#x2F;依赖属性&#x2F;路由事件等</li><li>数据模板&#x2F;控件模板”</li></ol><h4 id="分页查询——无限滚动"><a href="#分页查询——无限滚动" class="headerlink" title="分页查询——无限滚动"></a>分页查询——无限滚动</h4>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>出差</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-19</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-19/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-19/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《高效能人士的七个习惯》</p><blockquote><p>由于家里已经有一本了，所以这次新买的是不同的版本（黑色封面）<br>这个版本中的理论内容相当精简，全书的绝大部分都是给你写自我评估的表格。<br>今天看完了第一个习惯：<strong>积极主动</strong><br>其核心是<strong>缩小关注圈，扩大影响圈</strong>：</p></blockquote><ul><li>不要老是想着那些你无法改变的事情，比如环境、出身……</li><li>专注于你能够做到的、能够对你产生影响的事情</li><li>要保持积极的心态，无论外界发生什么，你的感受始终是由你自己决定的</li></ul><h2 id="工作学习"><a href="#工作学习" class="headerlink" title="工作学习"></a>工作学习</h2><ol><li>熟悉WPF图书管理系统、添加注释、重构冗余代码</li><li>逛了一下Github Star排行榜，第二名是<a href="https://996.icu/">996.icu</a>，居然还有这种神奇的东西</li></ol><h2 id="白玉兰大酒店"><a href="#白玉兰大酒店" class="headerlink" title="白玉兰大酒店"></a>白玉兰大酒店</h2><ul><li>下午打车到达溧阳白玉兰大酒店。感觉还挺高档，客房有智能语音系统。窗帘布居然都能自动打开&#x2F;关闭……</li><li>一次下楼坐电梯的时候，我选的3楼，结果发现4楼也亮了，下到4楼发现一个多功能的机器人一边说着自己收到的指令，一边自己进来了。</li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-18</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-18/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-18/</url>
    
    <content type="html"><![CDATA[<p>19：30 来通知了，今天收拾行李，明天去溧阳办理住宿，后天正式入场……</p><span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p><a href="https://api.doubi.tk/online_search">在线阅览图书地址</a><br><a href="https://app.flowoss.com/zh-CN">EPUB在线阅读地址</a><br>《高效能人士的七个习惯》<br>再次开始阅读这本书，对其中的概念有印象；但是我平时似乎不会特别频繁地提醒自己。<br>七个习惯：</p><ol><li>积极主动<ol><li>应该叫“主动积极”才对</li><li>着重关心那些你能做的事情，可以去改变地事情</li></ol></li><li>以终为始<ol><li>我是谁？</li><li>要去哪儿？</li><li>最好每天写下使命宣言，提醒自己；设定目标能够促进自己去行动</li></ol></li><li>要事第一<ol><li>时间4象限</li><li>尽可能多做半衰期长的事情</li></ol></li><li>双赢思维</li><li>知彼解己</li><li>统合综效</li><li>不断更新<blockquote><p>除了统合综效，其他习惯都是见名知意的，能够大概了解其内涵。<br>但是后面4个习惯里面的详细内容我已经忘了……</p></blockquote></li></ol><h2 id="工作学习"><a href="#工作学习" class="headerlink" title="工作学习"></a>工作学习</h2><p>完善图书管理系统WPF的后台CRUD功能，代码重构，样式优化。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-8-15</title>
    <link href="/%E5%91%A8%E5%BF%9725-8-15/"/>
    <url>/%E5%91%A8%E5%BF%9725-8-15/</url>
    
    <content type="html"><![CDATA[<p>碧蓝航线的商店界面变了，导致ALAS无法正常挂了。</p><span id="more"></span><h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><h2 id="工作学习"><a href="#工作学习" class="headerlink" title="工作学习"></a>工作学习</h2><p>WPF页面生命周期</p><ul><li>构造函数 → Loaded事件 → 用户交互 → Unloaded事件</li></ul><p>Style资源查找顺序</p><ul><li>本地资源 → 父级资源 → Application资源 → 系统资源</li></ul><p>WPF常用库</p><ul><li>CommunityToolkit.Mvvm</li></ul><p>WPF应用的图标</p><ul><li>添加图标后要重新生成解决方案，否则任务栏的图标无法正常显示</li></ul><p>VS Code相关分支AI IDE</p><ul><li>Cursor</li><li>Trae</li><li>WindSurf</li><li>Kiro</li></ul><h1 id="周志"><a href="#周志" class="headerlink" title="周志"></a>周志</h1><h2 id="本阶段我学到了什么？"><a href="#本阶段我学到了什么？" class="headerlink" title="本阶段我学到了什么？"></a>本阶段我学到了什么？</h2><ol><li>WPF的目录结构与最佳实践</li><li>在WPF中实现一个功能，思路是怎样的，分别要做哪些事情</li><li>WPF的核心概念（依赖属性、依赖对象、数据绑定、命令、样式、资源、事件、模板）</li><li>WPF独特的架构MVVM，对应的问题处理逻辑。</li></ol><h2 id="本阶段我发现了什么问题？"><a href="#本阶段我发现了什么问题？" class="headerlink" title="本阶段我发现了什么问题？"></a>本阶段我发现了什么问题？</h2><ol><li>WPF日志系统控制台乱码</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>询问AI大模型</li><li>在会议过程中学习</li><li>与周围同学交流</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><ol><li>继续完善当前WPF项目</li><li>学习下位机通信协议</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-14</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-14/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-14/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《蛤蟆先生去看心理医生》完结<br>因为是小说类型，语言通俗，读起来很轻松，但也感觉学到的东西没有议论性书籍收获多。</p><p>《金字塔原理》开始<br>本书用于提升表达能力，关于演讲：</p><ol><li>听众是谁</li><li>怎么讲</li><li>他们能听懂吗</li><li>听懂之后能记住吗</li></ol><h2 id="学习工作"><a href="#学习工作" class="headerlink" title="学习工作"></a>学习工作</h2><ol><li>理解目前的代码（首页、登录、注册）</li><li>思考如何将代码的结构写得更清晰（控件封装，样式统一管理）</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-13</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-13/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-13/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《蛤蟆先生去看心理医生》</p><h2 id="工作学习"><a href="#工作学习" class="headerlink" title="工作学习"></a>工作学习</h2><ul><li>Github Actions<ul><li>现状：利用Netlify网站部署的zhiyun.space博客中每篇文章的修改时间都一个样</li><li>实现：完成了 Github Pages 和 Netlify的自动部署</li><li>遗憾：Netlify每次检测到源代码更新都会重新部署，Netlify自己的部署时间小于Github Actions，又因为Netlify存在自动发布机制，导致最终zhiyun.space上呈现的是Netlify部署的版本，因此我现在必须锁定Netlify的自动发布功能，然后定期去Netlify选择发布到zhiyun.space上的版本。<ul><li>我又解决了！在Netlify的项目中，去Project configuration中调整Branches and deploy contexts的配置就行了——写不存在的分支、不让他进行部署！</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-12</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-12/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-12/</url>
    
    <content type="html"><![CDATA[<p>上午：明天去溧阳了，大概要呆2个月<br>下午：暂时不用去了，等后续通知……</p><span id="more"></span><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《蛤蟆先生去看心理医生》<br>无论别人说&#x2F;做了什么，都不能直接影响你的感受。<br>对这个世界的感受始终是由自己决定的。<br>不能够将自己目前的感觉规吝于他人。</p><p>人生四象限、思维、行动与预言：</p><ul><li>我好你好</li><li>我好你不好</li><li>我不好你好</li><li>我不好你不好<br>预言指的是在某种行为模式下，人为地干预&#x2F;限制&#x2F;促成某些事情的发展。</li></ul><h2 id="学习工作内容"><a href="#学习工作内容" class="headerlink" title="学习工作内容"></a>学习工作内容</h2><p>.NET的包管理工具Nuget，能像Maven那样构建父子工程的依赖管理，父工程中统一定义版本号，子工程中引用父工程中的版本号。Nuget在安装包时，会同时在工程目录和C盘安装依赖。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-11</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-11/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-11/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="ZQY第三次技术分享"><a href="#ZQY第三次技术分享" class="headerlink" title="ZQY第三次技术分享"></a>ZQY第三次技术分享</h2><p>做PLC通信协议的工程永远是.NET Standard Version 2.0</p><p>常用PLC型号：<br>S7-1200<br>S7-1500</p><p>大端模式和小端模式</p><blockquote><p>公司统一使用<strong>大端</strong>模式<br><strong>大端</strong><br>数据的高字节（最重要的字节）存储在内存的低地址处，而低字节（最不重要的字节）存储在内存的高地址处。<br>这种方式符合人类的阅读习惯，类似于我们书写数字的方式——从左到右，从高位到低位。<br>例如，一个32位的十六进制数 0x12345678 在内存中的存储方式如下：<br>地址数据<br>0x000x12<br>0x010x34<br>0x020x56<br>0x030x78</p></blockquote><p><strong>小端</strong><br>数据的低字节（最不重要的字节）存储在内存的低地址处，而高字节（最重要的字节）存储在内存的高地址处。这种存储方式与人类的阅读习惯相反。</p><p>同样的32位十六进制数 0x12345678 在小端模式下的存储方式如下：<br>地址数据<br>0x000x78<br>0x010x56<br>0x020x34<br>0x030x12</p><p>写S7点表永远是从双数开始。<br>点表需要自己写，控制PLC干什么，写好之后和电气部门协商，看他们那边好不好做，根据需要再做调整。</p><p>点表的顺序和代码中声明的顺序必须一致！</p><h2 id="WPF学习内容"><a href="#WPF学习内容" class="headerlink" title="WPF学习内容"></a>WPF学习内容</h2><ul><li>XAML</li><li>属性</li><li>绑定</li><li>事件</li><li>命令</li><li>模板</li><li>资源</li><li>绘图</li></ul><h2 id="出差前的准备"><a href="#出差前的准备" class="headerlink" title="出差前的准备"></a>出差前的准备</h2><ol><li>周三从公司出发吗？是的话我把个人行李带过来。</li><li>去现场之后的食宿如何解决？</li><li>出差外带笔记本电脑要跟IT讲一下吗？</li><li>钉钉&#x2F;i人事上要做什么申请、操作之类的吗？</li></ol><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>我非常有必要再次认真地看一遍《被讨厌的勇气》、《高效能人士的7个习惯》等书籍了……</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-10</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-10/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-10/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>正式工作有1个月了，昨天父母打电话问问我要不要回家一次，因为学习忙碌，我没打算回。<br>他们表示很想我，况且其他舍友都出差了，所以今天来宿舍看我（爷爷奶奶也一起来了）<br>老爸又给我买了块桌垫，但是我强调这材质根本不能用来当鼠标垫……<br>更让我惋惜的是：（本来我是让他把我家里用的带过来的）结果他以我买的鼠标垫有味道为由全给扔掉了……（我的天.JPG）</p><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>《蛤蟆先生去看心理医生》<br>原生家庭&#x2F;童年生活会对人长大后的行为举止造成巨大的影响。蛤蟆先生就是如此……</p><h2 id="FGO"><a href="#FGO" class="headerlink" title="FGO"></a>FGO</h2><p>下午三点，CGR给我发了条消息，让我也看看FES现场某位欧皇的抽卡结果：</p><p><img src="https://cdn.jsdelivr.net/gh/Okita1027/blog-images/2025/08/2025FES%E6%9F%90%E6%AC%A7%E7%9A%87%E7%9A%84%E6%8A%BD%E5%8D%A1%E8%AE%B0%E5%BD%95.png" alt="10连满宝？是人？"></p><p>愤愤不平的我立马上号抽学姐，结果200多个石头没出的来，很难受，去充了周年￥175礼包，再回来抽了2发，还是没出，没石头10连了……绝望之中发现自己呼符还多，抱着随随便便来一发的心情居然出了……</p><p>感觉除了刚回坑那会儿，最近都很非啊：</p><ul><li>抽个青子花了300多石……</li><li>有珠200多个石头没出来……</li><li>水埃蕾花了500多个石头才出来！</li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷资料地址</title>
    <link href="/%E5%B0%9A%E7%A1%85%E8%B0%B7%E8%B5%84%E6%96%99%E5%9C%B0%E5%9D%80/"/>
    <url>/%E5%B0%9A%E7%A1%85%E8%B0%B7%E8%B5%84%E6%96%99%E5%9C%B0%E5%9D%80/</url>
    
    <content type="html"><![CDATA[<p>PC端微信是真难用：如果连着几天没登录，下次登录的时候就让我用手机确认</p><span id="more"></span><h2 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/channel/seriesdetail?sid=457613">https://space.bilibili.com/302417610/channel/seriesdetail?sid=457613</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1PhTeMkX5vOg0ZRcw0abjCw?pwd=yyds">https://pan.baidu.com/s/1PhTeMkX5vOg0ZRcw0abjCw?pwd=yyds</a></li></ul><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/channel/seriesdetail?sid=457615">https://space.bilibili.com/302417610/channel/seriesdetail?sid=457615</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1XqIRt-QKQjMo1sJAsd93nA?pwd=yyds">https://pan.baidu.com/s/1XqIRt-QKQjMo1sJAsd93nA?pwd=yyds</a></li></ul><h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/lists/4652131?type=series">https://space.bilibili.com/302417610/lists/4652131?type=series</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1eZSTzhcn_BkOzv6MxP2L0g?pwd=yyds">https://pan.baidu.com/s/1eZSTzhcn_BkOzv6MxP2L0g?pwd=yyds</a></li><li>阿里云盘：<a href="https://www.alipan.com/s/xLnXXjHspKb">https://www.alipan.com/s/xLnXXjHspKb</a></li></ul><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/channel/seriesdetail?sid=457614">https://space.bilibili.com/302417610/channel/seriesdetail?sid=457614</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/119T7SE20lYuJOCtF96hVAg?pwd=yyds">https://pan.baidu.com/s/119T7SE20lYuJOCtF96hVAg?pwd=yyds</a></li></ul><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ul><li>Bilibili：<a href="https://www.bilibili.com/video/BV1eZ421b7ag">https://www.bilibili.com/video/BV1eZ421b7ag</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1FGxdOoUZhuLe-Hee70Dgyw?pwd=yyds">https://pan.baidu.com/s/1FGxdOoUZhuLe-Hee70Dgyw?pwd=yyds</a></li><li>阿里云盘：<a href="https://www.alipan.com/s/2M4tA224hFF">https://www.alipan.com/s/2M4tA224hFF</a></li></ul><h2 id="Linux运维"><a href="#Linux运维" class="headerlink" title="Linux运维"></a>Linux运维</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/channel/seriesdetail?sid=457618">https://space.bilibili.com/302417610/channel/seriesdetail?sid=457618</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1RBi-tTOZl6k3GxoOhqPUcg?pwd=yyds">https://pan.baidu.com/s/1RBi-tTOZl6k3GxoOhqPUcg?pwd=yyds</a></li></ul><h2 id="区块链"><a href="#区块链" class="headerlink" title="区块链"></a>区块链</h2><ul><li>百度网盘：<a href="https://pan.baidu.com/s/1PJocX5nbpWCwMERMF76vAQ">https://pan.baidu.com/s/1PJocX5nbpWCwMERMF76vAQ</a></li></ul><h2 id="嵌入式"><a href="#嵌入式" class="headerlink" title="嵌入式"></a>嵌入式</h2><ul><li>Bilibili：<a href="https://space.bilibili.com/302417610/channel/seriesdetail?sid=4081027">https://space.bilibili.com/302417610/channel/seriesdetail?sid=4081027</a></li><li>百度网盘：<a href="https://pan.baidu.com/s/1QBNa00AmyMIF8zyqzlZwQQ?pwd=yyds">https://pan.baidu.com/s/1QBNa00AmyMIF8zyqzlZwQQ?pwd=yyds</a></li></ul><h2 id="UI-UE"><a href="#UI-UE" class="headerlink" title="UI&#x2F;UE"></a>UI&#x2F;UE</h2><ul><li>百度网盘：<a href="https://pan.baidu.com/s/1eOA108wKZEHSI_Ru4ipFHg?pwd=yyds">https://pan.baidu.com/s/1eOA108wKZEHSI_Ru4ipFHg?pwd=yyds</a></li></ul><h2 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h2><ul><li>百度网盘：<a href="https://pan.baidu.com/s/1CoJMmNGvI6IVSsWyzB7m4g?pwd=yyds">https://pan.baidu.com/s/1CoJMmNGvI6IVSsWyzB7m4g?pwd=yyds</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更改.NET解决方案/项目名称的方法</title>
    <link href="/%E6%9B%B4%E6%94%B9-NET%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/%E6%9B%B4%E6%94%B9-NET%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-%E9%A1%B9%E7%9B%AE%E5%90%8D%E7%A7%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="更改-NET项目的名称的方法"><a href="#更改-NET项目的名称的方法" class="headerlink" title="更改.NET项目的名称的方法"></a>更改.NET项目的名称的方法</h2><ol><li>重命名<code>.csproj</code>和<code>.csproj.user</code>文件；</li><li>重命名项目文件夹名称【可选】</li><li>更改<code>.csproj</code>和<code>.csproj.user</code>文件中的如下内容：<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">&lt;RootNamespace&gt;命名空间名称&lt;/RootNamespace&gt;<br>&lt;AssemblyName&gt;新建C<span class="hljs-meta">#文件时生成的命名空间名称&lt;/AssemblyName&gt;</span><br></code></pre></td></tr></table></figure></li><li>更改解决方案文件<code>.sln</code>中对项目的引用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sln">Project(&quot;&#123;FAE04EC0-301F-11D3-BF4B-00C04F79EFBC&#125;&quot;) = &quot;你想要的名称&quot;, &quot;你想要的名称.csproj&quot;, &quot;&#123;5CEBB23A-BFE1-465D-AF8B-3A21764B88F7&#125;&quot;<br></code></pre></td></tr></table></figure></li><li>检查你的配置文件<code>launchSettings.json</code>和一系列<code>appsettings.json</code>是否需要更新项目引用名称</li><li>把所有代码中的原命名控件改成新的命名空间</li></ol>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
      <category>.NET</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows、Office激活指令</title>
    <link href="/Windows%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB%E6%8C%87%E4%BB%A4/"/>
    <url>/Windows%E7%B3%BB%E7%BB%9F%E6%BF%80%E6%B4%BB%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>命令行激活Windows系统、Office系列</p><span id="more"></span><p>管理员方式打开 PowerShell ，键入以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">irm https://get.activated.win | iex<br></code></pre></td></tr></table></figure><p>之后根据UI提示信息选择想要激活的项目</p>]]></content>
    
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-8-9</title>
    <link href="/%E5%91%A8%E5%BF%9725-8-9/"/>
    <url>/%E5%91%A8%E5%BF%9725-8-9/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><p>正式工作开始有1个月的时间了，昨天Black Fish（代）和主管在讨论让我们这批新人进项目的事情（不能让我们一直带薪学习，也该去现场贡献价值了）。再有大概10天就要去溧阳了，听前两个已经出差的同期生说：每天都加班到很晚……</p><hr><p>《蛤蟆先生去看心理医生》<br>心理咨询是自发的，咨询者和咨询师双方都要出于自愿才行。</p><h1 id="周志"><a href="#周志" class="headerlink" title="周志"></a>周志</h1><h2 id="本阶段我学到了什么？"><a href="#本阶段我学到了什么？" class="headerlink" title="本阶段我学到了什么？"></a>本阶段我学到了什么？</h2><ol><li>通过Vite构建React前端项目，引入React生态相关依赖完成第一阶段后端项目对应的前端界面</li><li>进入“41拉”项目，.NET 6.102、SQL Server2022的安装，配置SQL Server身份验证，启动程序</li><li>了解WPF基本概念（数据绑定、MVVM、控件大全(布局、数据展示、用户交互)）</li><li>因为笔记本键盘较小，打字时两手靠得更近，在输入问号时，自然养成了使用左shift的习惯</li></ol><h2 id="本阶段我发现了什么问题？"><a href="#本阶段我发现了什么问题？" class="headerlink" title="本阶段我发现了什么问题？"></a>本阶段我发现了什么问题？</h2><ol><li>WPF是Windows窗体应用程序，与传统Web前端页面不一样，以前能用浏览器做的事情现在不好做了</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>问AI</li><li>在技术分享过程中讨论</li><li>与同事交流</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><p>学习WPF，并为第一阶段的后端项目制作对应的前端页面；熟悉公司项目</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-8</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-8/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-8/</url>
    
    <content type="html"><![CDATA[<p>今天早上，GPT 5 发布了，并且能免费使用！<br>下午被拉近溧阳的项目组了，下个礼拜应该就要去现场了……</p><span id="more"></span><h2 id="ZY第二阶段学习问题记录"><a href="#ZY第二阶段学习问题记录" class="headerlink" title="ZY第二阶段学习问题记录"></a>ZY第二阶段学习问题记录</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol><li>多选删除</li><li>React工程构建方式</li><li>时间戳（dayjs）</li></ol><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ol><li>写好功能之后可以把console.log()删掉</li><li>表单稍微做得复杂一些（增加字段和控件、用户交互体验）</li><li>下位机通信协议重点是 S7，其它3个稍微看看</li></ol><h2 id="工作学习内容"><a href="#工作学习内容" class="headerlink" title="工作学习内容"></a>工作学习内容</h2><ol><li>后端增加图书的分页查询功能</li><li>React前端实现滚动分页查询</li><li>安装“41拉”开发环境</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-7</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-7/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-7/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="工作-学习内容"><a href="#工作-学习内容" class="headerlink" title="工作&#x2F;学习内容"></a>工作&#x2F;学习内容</h2><ol><li>原子化CSS<br>Uno CSS与Tailwind CSS的结合使用</li><li>控件提取<br>将TSX文件中的表单控件封装成单独的控件，简化页面中的属性声明代码</li><li>WPF<br>了解WPF、浏览WPF的组件库</li><li>后端代码重构<ol><li>改变解决方案&#x2F;工程名称</li><li>导航属性的显示加载（其实就是手动写一个获取的方法……）</li><li>日志增强（文件&#x2F;控制台）</li><li>思考分页的实现方式</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-6</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-6/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-6/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h2><h3 id="解决昨天的问题"><a href="#解决昨天的问题" class="headerlink" title="解决昨天的问题"></a>解决昨天的问题</h3><h2 id="前提：1-用ZUSTAND做全局状态管理，用户登录鉴权也是放在那里的。2-启用了严格模式：情况：在后台管理页面-退出登录-后，会跳转到-登录页面-显示-2次-“请先登录”。在-退出登录-这个方法中的最后我写的是跳转回-首页-，但是-由于登出让isAuthenticated变为了false-进而导致重新渲染，而中又写了跳转回到-登录页面和提示-请先登录。"><a href="#前提：1-用ZUSTAND做全局状态管理，用户登录鉴权也是放在那里的。2-启用了严格模式：情况：在后台管理页面-退出登录-后，会跳转到-登录页面-显示-2次-“请先登录”。在-退出登录-这个方法中的最后我写的是跳转回-首页-，但是-由于登出让isAuthenticated变为了false-进而导致重新渲染，而中又写了跳转回到-登录页面和提示-请先登录。" class="headerlink" title="前提：1. 用ZUSTAND做全局状态管理，用户登录鉴权也是放在那里的。2. 启用了严格模式：&lt;StrictMode&gt;情况：在后台管理页面 退出登录 后，会跳转到 登录页面 显示 2次 “请先登录”。在 退出登录 这个方法中的最后我写的是跳转回 首页/，但是 由于登出让isAuthenticated变为了false,进而导致重新渲染&lt;AdminRoute&gt;，而&lt;AdminRoute&gt;中又写了跳转回到 登录页面和提示 请先登录。"></a>前提：<br>1. 用<code>ZUSTAND</code>做全局状态管理，用户登录鉴权也是放在那里的。<br>2. 启用了严格模式：<code>&lt;StrictMode&gt;</code><br>情况：<br>在后台管理页面 <em>退出登录</em> 后，会跳转到 <em>登录页面</em> 显示 2次 “请先登录”。<br>在 <em>退出登录</em> 这个方法中的最后我写的是跳转回 首页<code>/</code>，但是 由于登出让<code>isAuthenticated</code>变为了<code>false</code>,进而导致重新渲染<code>&lt;AdminRoute&gt;</code>，而<code>&lt;AdminRoute&gt;</code>中又写了跳转回到 登录页面和提示 <em>请先登录</em>。</h2><p>晚上又改了一版：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TSX"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleLogout</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-title function_">logout</span>();<br>  <span class="hljs-keyword">if</span> (location.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&quot;/admin&quot;</span>)) &#123;<br>    <span class="hljs-title function_">navigate</span>(<span class="hljs-string">&quot;/login&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    toast.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;已退出登录&quot;</span>);<br>    <span class="hljs-title function_">navigate</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>ｌｏｇｏｕｔ时触发全局状态管理<br>条件判断　上一个路径，如果是后台管理系统则</p><ul><li>提示用户“请先登录”并跳转到登录页面。</li><li>否则跳转到首页，提示“已退出登录”</li></ul><h3 id="阅读React官方文档"><a href="#阅读React官方文档" class="headerlink" title="阅读React官方文档"></a>阅读React官方文档</h3><p>粗略地看了看<code>学习React</code>：</p><ol><li>状态管理（useState）</li><li>脱围机制（如何让代码执行效率更高）</li></ol><h3 id="原子化CSS"><a href="#原子化CSS" class="headerlink" title="原子化CSS"></a>原子化CSS</h3><p>了解概念：</p><ol><li>Uno CSS</li><li>Tailwind CSS</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-5</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-5/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-5/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="第二阶段学习问题记录"><a href="#第二阶段学习问题记录" class="headerlink" title="第二阶段学习问题记录"></a>第二阶段学习问题记录</h2><p>可以导出组件export deault 组件名称，可以直接导出函数export 函数名</p><p>创建组件的方式</p><ul><li>函数</li><li>类（已过时）</li></ul><p>组件传值</p><ul><li>props</li></ul><p>React学习(阅读官方文档)</p><p>Zustand异步操作</p><p>FUNCTION中调用REACT HOOK<br>要在函数中调用 Hook，你需要满足一个非常重要的规则：Hook 只能在 React 函数组件或自定义 Hook 的顶层调用。</p><p>这意味着你不能在以下情况调用 Hook：</p><ol><li><p>普通的 JavaScript 函数中：Hook 依赖于 React 内部的“Hooks 列表”，只有在 React 渲染组件时，这个列表才可用。</p></li><li><p>条件语句、循环或嵌套函数中：React 依赖 Hook 的调用顺序来正确地关联状态和 Hook。如果 Hook 的调用顺序不固定，React 将无法正确地工作。</p></li></ol><hr><p>样式，组件封装<br>REACT&#x2F;VUE  SCSS文件的全局样式</p><hr><p>JWT安全相关的问题</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>TODO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-8-4</title>
    <link href="/%E6%97%A5%E5%BF%9725-8-4/"/>
    <url>/%E6%97%A5%E5%BF%9725-8-4/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>上午看了会儿WPF、React Query<br>下午换了新的笔记本（DELL 11代I5）、装环境</p><p>最肝的一天，晚上只睡了3个多小时（02~06）</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-8-1</title>
    <link href="/%E5%91%A8%E5%BF%9725-8-1/"/>
    <url>/%E5%91%A8%E5%BF%9725-8-1/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="本阶段我学到了什么"><a href="#本阶段我学到了什么" class="headerlink" title="本阶段我学到了什么"></a>本阶段我学到了什么</h2><ol><li>TypeScript（类型系统、数组、元组、函数、对象、interface、class、泛型、Enum、装饰器、类型运算符、类型映射、注释指令）</li><li>React（JSX&#x2F;TSX基础语法、事件绑定、组件基础、表单控制、组件通信、副作用管理、常见的钩子函数、组件、React API）</li><li>React Router（路由配置、渲染策略、数据加载、Action、导航、Pending UI）</li><li>Zustand（基本使用、更新状态、不可变状态与合并、重置状态、用props初始化状态、切片模式、useShallow防止重新渲染、combine中间件、persist中间件）</li></ol><h2 id="本阶段我发现了什么问题"><a href="#本阶段我发现了什么问题" class="headerlink" title="本阶段我发现了什么问题"></a>本阶段我发现了什么问题</h2><ol><li>React、React Router中有些概念非常相似，没分清楚，不明确如何使用它们</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>问AI</li><li>在评审过程中记录问题、学习</li><li>与其他人讨论</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><p>利用React完成第一阶段学习的前端界面、学习WPF</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-31</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-31/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-31/</url>
    
    <content type="html"><![CDATA[<p>早上YZH的评审花的时间有点多了，今天的学习进度也因此拖慢了很多……</p><span id="more"></span><h2 id="YZH-第二阶段学习评审-问题记录"><a href="#YZH-第二阶段学习评审-问题记录" class="headerlink" title="YZH 第二阶段学习评审 问题记录"></a>YZH 第二阶段学习评审 问题记录</h2><h3 id="for…in-和-for-of"><a href="#for…in-和-for-of" class="headerlink" title="for…in 和 for..of"></a>for…in 和 for..of</h3><h3 id="Date-getFullYear-和-Date-getYear"><a href="#Date-getFullYear-和-Date-getYear" class="headerlink" title="Date.getFullYear() 和 Date.getYear()"></a>Date.getFullYear() 和 Date.getYear()</h3><h3 id="鼠标事件中mouseEnter、mouseLeave、mouseOver、mouseOut"><a href="#鼠标事件中mouseEnter、mouseLeave、mouseOver、mouseOut" class="headerlink" title="鼠标事件中mouseEnter、mouseLeave、mouseOver、mouseOut"></a>鼠标事件中mouseEnter、mouseLeave、mouseOver、mouseOut</h3><h3 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h3><h4 id="结构不能被打断"><a href="#结构不能被打断" class="headerlink" title="结构不能被打断"></a>结构不能被打断</h4><p>何为“结构不能被打断”<br>可以在v-if和v-else-if和v-else之间插入嵌套的if语句吗？</p><h2 id="今日学习记录"><a href="#今日学习记录" class="headerlink" title="今日学习记录"></a>今日学习记录</h2><p>React Router:</p><ul><li>路由（框架模式）<ul><li>配置路由</li><li>路由模块：在外面写好了路由组件，然后引进配置文件来用</li><li>嵌套路由</li><li>根路由</li><li>布局路由：做页面布局的</li><li>索引路由：默认显示的路由组件</li><li>路由前缀</li><li>动态片段</li><li>可选片段</li><li>通配符片段</li><li>组件式路由</li></ul></li><li>渲染策略<ul><li>CSR：客户端渲染</li><li>SSR：服务器端渲染</li><li>SSG：静态生成</li></ul></li><li>数据加载<ul><li>客户端加载（<code>useEffect()</code>）</li><li>服务器端加载(<code>loader()</code>)</li><li>渐进式加载(<code>defer() + Await</code>)</li><li>静态加载(<code>getStaticProps()</code>)</li></ul></li><li>action: 表单提交（GET,POST,PUT,DELETE）时的数据处理操作</li><li>导航<ul><li><code>useNavigate()</code>编程式导航</li><li><code>&lt;Link to=&quot;/&quot;&gt;</code> 声明式导航</li><li><code>&lt;NavLink to=&quot;/&quot;&gt;</code> 带样式的声明式导航</li><li>配置action进行跳转</li></ul></li><li>Pending UI<ul><li>三种状态<ul><li>idle</li><li>loading</li><li>submitting</li></ul></li><li>useNavigation():检测当前的导航状态</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>TODO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-30</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-30/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-30/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天学完React基础，明天看React Router，后天看Zustand</p><ul><li>组件通信<ul><li>父传子：父组件将数据定义好之后，将属性名写在子组件上，子组件用props接受数据</li><li>子传父：父组件传一个函数给子组件，子组件调用这个函数进行数据传递</li><li>兄弟通信：父传子&#x3D;&gt;子传父</li><li>跨级通信<ol><li>使用 <code>createContext</code>方法创建一个上下文对象Ctx</li><li>在顶层组件（App）中通过 <code>Ctx.Provider</code> 组件提供数据</li><li>在底层组件（B）中通过 <code>useContext</code> 钩子函数获取消费数据</li></ol></li></ul></li><li>副作用管理：useEffect()</li><li>Hook函数：以use开头的函数<ul><li>useReducer: 比useState()强大，更适合管理多个状态</li><li>useMemo: 缓存计算结果，避免重复计算,该函数必须是纯函数</li><li>useCallback: 缓存回调函数，避免重复创建，该函数必须返回一个函数</li><li>useImperativeHandle: 让父组件直接修改子组件的属性</li><li>useDeferredValue: 给某个值一个默认的过期值，让他相比UI组件来说延迟更新</li><li>useLayoutEffect: 跟useEffect()一样，但会在DOM更新之后、浏览器绘制之前执行</li><li>useOptimistic:乐观更新，前端提交后直接更新UI，然后发送请求完成后再更新实际数据</li><li>useId: 生成唯一的id，用于HTML元素，如input的name属性</li><li>useTransition: 作用与useDeferredValue()一样，但控制的粒度更细</li></ul></li><li>组件<ul><li><code>&lt;Fragment&gt;</code> &#x2F; <code>&lt;&gt;&lt;/&gt;</code>：空标签</li><li>StrictMode：严格模式，用于开发环境，会检查组件的渲染逻辑、数据流、事件处理、生命周期方法、组件的props、state和context</li><li>Suspense：用于异步组件，用于处理异步数据加载、错误、加载中状态</li><li>Profile:测量组件树渲染性能</li></ul></li><li>React API:<ul><li>memo:缓存组件渲染结果，避免重复渲染</li><li>lazy:懒加载</li><li>startTransition</li><li>CreateContext</li><li>use</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-29</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-29/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-29/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天的进度：结束TS，开始REACT</p><ul><li>装饰器：在不修改原有代码的基础上用于增加或修改类的行为<ul><li>结构：value&#x3D;》被装饰的原有对象；context&#x3D;》上下文对象</li><li>类装饰器：修改类的构造函数或替代构造函数直接返回一个对象</li><li>方法装饰器：替换原有的方法，或返回一个函数</li><li>属性装饰器：可以返回一个函数，在类实例化时自动执行用于字段的赋值</li><li>get&#x2F;set装饰器</li><li>accessor装饰器：替换getter和setter方法</li></ul></li><li>类型运算符<ul><li>keyof</li><li>in</li><li>[]</li><li>extends ? : 与 infer</li><li>is</li></ul></li><li>类型映射：快速将一个已有类型映射为另一个类型</li><li>注释指令：有实际效果的注释<ul><li>&#x2F;&#x2F;&#x2F;</li><li>TS诊断指令</li><li>JS Doc</li><li>ES Lint</li></ul></li><li>React<ul><li>JSX基础语法</li><li>事件绑定</li><li>组件基础<ul><li>受控绑定：useState()</li><li>非受控绑定：useRef()</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-28</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-28/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-28/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今日学习小结：</p><ul><li>函数<ul><li>Function类型：所有函数的原型</li></ul></li><li>对象<ul><li>属性名的索引类型<ul><li>字符串</li><li>数字</li></ul></li><li>结构类型原则：鸭子类型</li><li>严格字面量检查：对象赋值时的字段数量必须等同于声明时的数量</li><li>最小可选属性原则：如果对象的所有属性都是可选的，在声明对象时必须至少添加一个可选属性</li><li>空对象：和JS不同的是，声明的空对象不能再被赋值，比如obj.a &#x3D; 1;</li></ul></li><li>interface</li><li>类<ul><li>实例属性的简写形式：直接在构造函数种声明 访问修饰符和属性名,比如 constructor(public name: string) {}</li></ul></li><li>泛型</li><li>枚举<ul><li>只读：枚举本身就是只读的，但在声明枚举时手动添加const能减少TS编译成JS的代码量，缺点是无法使用反向映射</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-7-26</title>
    <link href="/%E5%91%A8%E5%BF%9725-7-26/"/>
    <url>/%E5%91%A8%E5%BF%9725-7-26/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="本阶段我学到了什么"><a href="#本阶段我学到了什么" class="headerlink" title="本阶段我学到了什么"></a>本阶段我学到了什么</h2><ol><li>补充EF Core中DbContext的相关知识：生命周期、使用方法、DbContextOptions、Expression表达式树、已编译的模型</li><li>JavaScript：基础语法（变量与类型、模板字符串、循环与迭代）、函数（Arguments对象、标签函数、生成器函数、常见的预定义函数）、弱引用集合（WeakSet、WeakMap）、OOP（this、私有字段&#x2F;方法、?. ?.() ?.[]）、Promise(三种状态、与Async&#x2F;Await关系、时序)、类型化数组的组成部分、原型&#x2F;原型链、属性的可枚举型和所有权</li><li>TypeScrip：基础用法(类型声明与自动推断)</li></ol><h2 id="本阶段我发现了什么问题"><a href="#本阶段我发现了什么问题" class="headerlink" title="本阶段我发现了什么问题"></a>本阶段我发现了什么问题</h2><ol><li>较难理解JavaScript中所有对象的顶级机制：原型&#x2F;原型链</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>询问AI大模型</li><li>在评审过程中学习</li><li>与周围同学交流</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-25</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-25/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-25/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="《魔女之旅》"><a href="#《魔女之旅》" class="headerlink" title="《魔女之旅》"></a>《魔女之旅》</h2><p>早晨把《魔女之旅》最后一话看完了，回想整部动漫，印象最深的是第九集：<br>一位魔女在三年前杀死了一个杀人狂魔，同时也是她的挚友。<br>魔女误以为挚友变成如今这样是因为10年前有一个强盗闯入了挚友家中将其父母砍死，从而失去了正常的家庭环境；魔女杀死挚友后的这三年来，不断存储魔力（甚至将自己大量的血液转为魔力），并且成功研究出了时间魔法。<br>在魔女认为时机成熟时发起了巨额奖金的委托，主角正好来到这个国家接到了魔女的委托，与她一同前往10年前的现在以阻止挚友的父母被杀以拯救挚友（穿越到过去的是另一条时间线，不论发生了什么也不会对主角现存的世界线产生任何影响，魔女认为只要有一个挚友被拯救就足够了），万万没想到10年前杀死父母的就是挚友本人（父亲亵渎自己，母亲因此嫉妒而殴打自己，于是乱刀捅死了父母同时体会到杀人的愉悦，日后成为了杀人狂魔，与魔女的友谊不过是假装的）<br>（魔女为了穿越时间耗尽了所有魔法，此时的她是通过道具使用主角的魔力）魔女在了解真相之后迫不及待地想要再次亲手杀死挚友，主角不想看到这样的事情于是终止给魔女的魔力源。<br>但魔法师是可以通过牺牲自己的某些东西来换取魔力的，魔女选择牺牲自己对挚友的记忆来换取魔力，从而再次杀死挚友。<br>时间回到现在，魔女失去了挚友相关的记忆，浪费了三年时间和健康……</p><h2 id="工作学习"><a href="#工作学习" class="headerlink" title="工作学习"></a>工作学习</h2><p>今天看完了JS，其中有相当一部分时间在看 原型&#x2F;原型链 这一章节<br>原型是所有JavaScript对象都拥有的一个属性，这个属性是一个指针，指向它的原型对象。<br>创建对象时，对象会从它的原型对象继承属性和方法。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-24</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-24/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-24/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>上午看DbContext:</p><ul><li>使用方法<ul><li>基本依赖注入</li><li>直接new</li><li>DbContext工厂</li></ul></li><li>DbContextOptions （用来创建DbContext时候的配置选项）</li><li>Expression表达式树构建 动态构造的查询：Expression是用特别麻烦的语法来定义一个Lambda表达式</li><li>已编译的模型：可以事先把C#实体类编译、配置好，把原本程序启动时要做的工作提前完成，这样，DbContext启动时就不需要再做这些工作了<ul><li>在实体类特别特别多的时候有用</li></ul></li></ul><p>下午看JavaScript：</p><ul><li>let和var</li><li>模板字符串</li><li>标签函数</li><li>生成器</li><li>弱引用集合<ul><li>WeakSet</li><li>WeakMap</li></ul></li><li>常见的内置函数整理</li><li>OOP里JS的独特写法<ul><li>构造函数</li><li>私有字段</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-23</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-23/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-23/</url>
    
    <content type="html"><![CDATA[<p>今天上午进行了第一阶段学习的评审，也许是因为昨晚没睡好的原因，讲的时候感觉精神状态不是很好，有些知识点我当时完全想不起来；代码也没讲得很细致：虽说写了很详细的注释，但感觉还是应该把生疏的地方讲解一下的。<br>我讲完之后，大神指出了我对某些知识点的误解，我就做好标记，日后再重新看一下……<br>虽然没讲好，但总的来说大伙还算满意<br>最近实在是太肝了(晚上起码干道11点，早上6点又起来看)……被问道每天回去之后学多久的时候，我没敢说实话……）</p><span id="more"></span><h2 id="第一阶段学习评审"><a href="#第一阶段学习评审" class="headerlink" title="第一阶段学习评审"></a>第一阶段学习评审</h2><h3 id="NET-CORE模型绑定"><a href="#NET-CORE模型绑定" class="headerlink" title=".NET CORE模型绑定"></a>.NET CORE模型绑定</h3><h3 id="ApiController-注解写不写的区别"><a href="#ApiController-注解写不写的区别" class="headerlink" title="[ApiController]注解写不写的区别"></a>[ApiController]注解写不写的区别</h3><h3 id="光看方法签名要能知道返回什么"><a href="#光看方法签名要能知道返回什么" class="headerlink" title="光看方法签名要能知道返回什么"></a>光看方法签名要能知道返回什么</h3><h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p>下午开始学习、整理 上午标记好的 节点</p><ul><li>从属实体类型的用处</li><li>替代键<br>后来又看了一会儿JavaScript:</li><li>arguments对象</li><li>this的特性</li></ul><p>主管提醒我DbContext学的少了，明天要再看一下</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
      <tag>TODO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-22</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-22/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-22/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="学习JavaScript"><a href="#学习JavaScript" class="headerlink" title="学习JavaScript"></a>学习JavaScript</h2><p><a href="https://zh.javascript.info/">现代 JavaScript 教程</a></p><p><a href="https://liaoxuefeng.com/books/javascript/introduction/index.html">简介 - JavaScript教程 - 廖雪峰的官方网站</a></p><ul><li><code>??</code>运算符</li><li>循环与迭代<ul><li>for…in</li><li>for…of</li></ul></li><li>函数中的Arguments对象</li><li>OOP<ul><li><code>this</code></li><li>不存在的属性</li><li>Symbol类型</li></ul></li></ul><h2 id="复习-NET"><a href="#复习-NET" class="headerlink" title="复习.NET"></a>复习.NET</h2><h3 id="自定义异常过滤器"><a href="#自定义异常过滤器" class="headerlink" title="自定义异常过滤器"></a>自定义异常过滤器</h3><ol><li>自定义异常过滤器<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ArgumentExceptionFilter</span> : <span class="hljs-title">IExceptionFilter</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnException</span>(<span class="hljs-params">ExceptionContext context</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (context.Exception <span class="hljs-keyword">is</span> ArgumentException argumentException)<br>        &#123;<br>            context.Result = <span class="hljs-keyword">new</span> BadRequestObjectResult(<span class="hljs-keyword">new</span><br>            &#123;<br>                Title = <span class="hljs-string">&quot;参数异常——来自ArgumentExceptionFilter&quot;</span>,<br>                Detail = argumentException.Message,<br>                StatusCode = <span class="hljs-number">400</span><br>            &#125;);<br><br>            context.ExceptionHandled = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>注册服务<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#">builder.Services.AddControllers(options =&gt;<br>&#123;<br>    options.Filters.Add(<span class="hljs-keyword">new</span> ArgumentExceptionFilter());<br>&#125;);<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-21</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-21/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-21/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>完善图书管理DEMO<br>复习C#、.NET Core、EF Core</p><h2 id="NET-工程文件"><a href="#NET-工程文件" class="headerlink" title=".NET 工程文件"></a>.NET 工程文件</h2><p><code>.csproj</code>:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-tag">&lt;<span class="hljs-name">Project</span> <span class="hljs-attr">Sdk</span>=<span class="hljs-string">&quot;Microsoft.NET.Sdk.Web&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">PropertyGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TargetFramework</span>&gt;</span>net8.0<span class="hljs-tag">&lt;/<span class="hljs-name">TargetFramework</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Nullable</span>&gt;</span>enable<span class="hljs-tag">&lt;/<span class="hljs-name">Nullable</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImplicitUsings</span>&gt;</span>enable<span class="hljs-tag">&lt;/<span class="hljs-name">ImplicitUsings</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">RootNamespace</span>&gt;</span>DEMO_CRUD<span class="hljs-tag">&lt;/<span class="hljs-name">RootNamespace</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">UserSecretsId</span>&gt;</span>1340a55c-d821-44f2-827e-1d76d1e294c8<span class="hljs-tag">&lt;/<span class="hljs-name">UserSecretsId</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">PropertyGroup</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 类似于前端的package.json、Java的pom.xml，记录了该程序用到了哪些包 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">ItemGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Mapster&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;7.4.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Mapster.DependencyInjection&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;1.0.1&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Masuit.Tools.Core&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;2025.4.5&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.AspNetCore.Authentication.JwtBearer&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.18&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.AspNetCore.OpenApi&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.11&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.EntityFrameworkCore.Sqlite&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.18&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.EntityFrameworkCore.SqlServer&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.11&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.EntityFrameworkCore.Tools&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.11&quot;</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--表示该包的所有资产都是私有的,</span><br><span class="hljs-comment">          不会传递给引用此项目的其他项目--&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">PrivateAssets</span>&gt;</span>all<span class="hljs-tag">&lt;/<span class="hljs-name">PrivateAssets</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--指定要包含的资产类型--&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">IncludeAssets</span>&gt;</span>runtime; build; native; contentfiles; analyzers; buildtransitive<span class="hljs-tag">&lt;/<span class="hljs-name">IncludeAssets</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">PackageReference</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Microsoft.VisualStudio.Web.CodeGeneration.Design&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.7&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Pomelo.EntityFrameworkCore.MySql&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.0.3&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Serilog.AspNetCore&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;9.0.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Serilog.Sinks.File&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;7.0.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;Swashbuckle.AspNetCore&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;6.9.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">PackageReference</span> <span class="hljs-attr">Include</span>=<span class="hljs-string">&quot;System.IdentityModel.Tokens.Jwt&quot;</span> <span class="hljs-attr">Version</span>=<span class="hljs-string">&quot;8.12.1&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">ItemGroup</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">Project</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>由代理引起的Git报错解决方法</title>
    <link href="/%E7%94%B1%E4%BB%A3%E7%90%86%E5%BC%95%E8%B5%B7%E7%9A%84Git%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/%E7%94%B1%E4%BB%A3%E7%90%86%E5%BC%95%E8%B5%B7%E7%9A%84Git%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>因为这个解决方案用得非常多，为了方便今后使用，在自己的站点上也放一份</p><blockquote><p>原文：完美解决 git 报错 “fatal: unable to access ‘https :&#x2F;&#x2F;github.com&#x2F;…&#x2F;.git‘: Recv failure Connection was rese<br><a href="https://blog.csdn.net/qq_43546721/article/details/139506583">https://blog.csdn.net/qq_43546721/article/details/139506583</a></p></blockquote><span id="more"></span><h2 id="取消代理设置"><a href="#取消代理设置" class="headerlink" title="取消代理设置"></a>取消代理设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs BASH">git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><h2 id="使用本地代理"><a href="#使用本地代理" class="headerlink" title="使用本地代理"></a>使用本地代理</h2><blockquote><p>端口号要根据实际更改：</p><ul><li>Clash For Windows : 7890</li><li>Clash Verge : 7897</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">git config --global http.proxy http://127.0.0.1:7890<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-7-18</title>
    <link href="/%E5%91%A8%E5%BF%9725-7-18/"/>
    <url>/%E5%91%A8%E5%BF%9725-7-18/</url>
    
    <content type="html"><![CDATA[<p>周志&amp;学习报告<br>本周主要学习的是EF Core，之后写了一个图书管理系统的DEMO</p><span id="more"></span><h2 id="本阶段我学到了什么"><a href="#本阶段我学到了什么" class="headerlink" title="本阶段我学到了什么"></a>本阶段我学到了什么</h2><ol><li>数据库上下文：DbContext是EF Core和数据库进行交互的关键对象，该对象会读取数据库中的所有记录供用户进行读取、编辑，该上下文拥有池化技术。</li><li>创建模型：定义数据库表中的字段是如何与.NET程序中的C#实体类对应、交互的。</li><li>管理数据库架构：这是EF Core与其他语言的ORM框架的不同之处&#x3D;&gt;先写C#实体类字段、（导航）属性、外键，再生成数据库解构；用命令生成用于迁移数据库的文件以方便其他机器快速初始化数据库解构；EF Core也支持逆向工程。</li><li>查询数据：跟踪&#x2F;不跟踪查询、加载导航属性的时机、拆分查询、复杂查询运算符、直接用原生SQL来查询、查询标记、NULL值的比较</li><li>日志、事件和诊断：简单日志、传统saveChanges事件与拦截器、更偏底层，影响更小的侦听器与诊断侦听器。</li></ol><h2 id="本阶段我发现了什么问题"><a href="#本阶段我发现了什么问题" class="headerlink" title="本阶段我发现了什么问题"></a>本阶段我发现了什么问题</h2><ol><li>在编写DEMO应用时，多对多关系的处理较棘手</li><li>偏理论与底层的知识应用困难</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>与AI大模型交互</li><li>查询相关文档、笔记</li><li>与周围同学交流</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><p>完成DEMO程序、学习.NET生态和VUE3</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-17</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-17/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-17/</url>
    
    <content type="html"><![CDATA[<p>今天学习完EF Core，开始做DEMO【图书管理系统】</p><span id="more"></span><h2 id="注解校验"><a href="#注解校验" class="headerlink" title="注解校验"></a>注解校验</h2><p><code>ModelState.IsValid</code>:判断前端传来的字段是否符合实体类上的注解约束声明</p><h2 id="自动更新UpdatedTime字段"><a href="#自动更新UpdatedTime字段" class="headerlink" title="自动更新UpdatedTime字段"></a>自动更新UpdatedTime字段</h2><h3 id="自定义审计接口"><a href="#自定义审计接口" class="headerlink" title="自定义审计接口"></a>自定义审计接口</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">IAuditableEntity</span><br>&#123;<br>    <span class="hljs-keyword">public</span> DateTime UpdatedTime &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="实体类实现接口"><a href="#实体类实现接口" class="headerlink" title="实体类实现接口"></a>实体类实现接口</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Author</span> : <span class="hljs-title">IAuditableEntity</span><br>&#123;<br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="在DbContext中重写SaveChanges-和SaveChangesAsync"><a href="#在DbContext中重写SaveChanges-和SaveChangesAsync" class="headerlink" title="在DbContext中重写SaveChanges()和SaveChangesAsync()"></a>在DbContext中重写SaveChanges()和SaveChangesAsync()</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">int</span> <span class="hljs-title">SaveChanges</span>()</span><br>&#123;<br>    ApplyAuditInformation(); <span class="hljs-comment">// 调用私有方法来更新 UpdatedTime</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">base</span>.SaveChanges();<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-title">SaveChangesAsync</span>(<span class="hljs-params">CancellationToken cancellationToken = <span class="hljs-literal">default</span></span>)</span><br>&#123;<br>    ApplyAuditInformation(); <span class="hljs-comment">// 调用私有方法来更新 UpdatedTime</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-keyword">base</span>.SaveChangesAsync(cancellationToken);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ApplyAuditInformation</span>()</span><br>&#123;<br>    <span class="hljs-comment">// 获取所有处于 Added (新增) 或 Modified (修改) 状态的实体条目</span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> entry <span class="hljs-keyword">in</span> ChangeTracker.Entries())<br>    &#123;<br>        <span class="hljs-keyword">if</span> (entry.Entity <span class="hljs-keyword">is</span> IAuditableEntity auditableEntity) <span class="hljs-comment">// 检查实体是否实现了 IAuditableEntity 接口</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (entry.State == EntityState.Modified)<br>            &#123;<br>                <span class="hljs-comment">// 如果实体被修改，更新 UpdatedTime</span><br>                auditableEntity.UpdatedTime = DateTime.Now;<br><br>                <span class="hljs-comment">// 可选：如果你想确保 CreatedTime 不被修改，可以在这里处理</span><br>                <span class="hljs-comment">// entry.Property(nameof(IAuditableEntity.CreatedTime)).IsModified = false;</span><br>            &#125;<br>            <span class="hljs-comment">// 你也可以在这里处理 EntityState.Added 状态的实体，如果它们的 CreatedTime 没有在构造函数中设置</span><br>            <span class="hljs-comment">// else if (entry.State == EntityState.Added)</span><br>            <span class="hljs-comment">// &#123;</span><br>            <span class="hljs-comment">//     auditableEntity.CreatedTime = DateTime.Now;</span><br>            <span class="hljs-comment">//     auditableEntity.UpdatedTime = DateTime.Now;</span><br>            <span class="hljs-comment">// &#125;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="生成基础CRUD"><a href="#生成基础CRUD" class="headerlink" title="生成基础CRUD"></a>生成基础CRUD</h2><h2 id="联结实体类"><a href="#联结实体类" class="headerlink" title="联结实体类"></a>联结实体类</h2><p>书 和 书的类别 是多对多的关系：<br>BookCategory:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BookCategory</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> BookId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> Book Book &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> CategoryId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> Category Category &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ApplicationDbContext:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnModelCreating</span>(<span class="hljs-params">ModelBuilder modelBuilder</span>)</span><br>&#123;<br>    <span class="hljs-keyword">base</span>.OnModelCreating(modelBuilder);<br><br>    <span class="hljs-comment">// 在此进行模型设定...</span><br>    <span class="hljs-comment">// 1. 定义复合主键</span><br>    modelBuilder.Entity&lt;BookCategory&gt;()<br>        .HasKey(bc =&gt; <span class="hljs-keyword">new</span> &#123; bc.BookId, bc.CategoryId &#125;);<br><br>    <span class="hljs-comment">// 2. 设定从 BookCategory 到 Book 的关系</span><br>    <span class="hljs-comment">// 一个BookCategory 只能对应一个 Book</span><br>    <span class="hljs-comment">// 一个Book 可以对应多个 BookCategory 记录</span><br>    modelBuilder.Entity&lt;BookCategory&gt;()<br>        .HasOne(bc =&gt; bc.Book)<br>        .WithMany(b =&gt; b.BookCategories)<br>        .HasForeignKey(bc =&gt; bc.BookId);<br><br>    <span class="hljs-comment">// 3. 设定从 BookCategory 到 Category 的关系</span><br>    <span class="hljs-comment">// 一个BookCategory 只能对应一个 Category</span><br>    <span class="hljs-comment">// 一个Category 可以对应多个 BookCategory 记录</span><br>    modelBuilder.Entity&lt;BookCategory&gt;()<br>        .HasOne(bc =&gt; bc.Category)<br>        .WithMany(c =&gt; c.BookCategories)<br>        .HasForeignKey(bc =&gt; bc.CategoryId);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h2><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>安装2个NuGet包<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs BASH">dotnet add package Microsoft.AspNetCore.Authentication.JwtBearer<br>dotnet add package System.IdentityModel.Tokens.Jwt<br></code></pre></td></tr></table></figure></li><li>在<code>appsettings.json</code>中配置 JWT<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-attr">&quot;JwtSettings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;_comment&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SecretKey:令牌的颁发者（通常是你的API域名）;Issuer:令牌的接收者（通常是你的前端域名或客户端应用标识）&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;SecretKey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;这是一个非常非常非常非常非常安全的秘密密钥！长度必须足够长且复杂，例如至少32个随机字符。&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;Issuer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;YourApiIssuer&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;Audience&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;YourApiClient&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li>在<code>Program.cs</code>中添加认证支持<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">// JWT配置开始</span><br>IConfigurationSection jwtSettings = builder.Configuration.GetSection(<span class="hljs-string">&quot;JwtSettings&quot;</span>);<br><span class="hljs-built_in">string</span> secretKey = jwtSettings[<span class="hljs-string">&quot;SecretKey&quot;</span>];    <span class="hljs-comment">// JWT签名密钥</span><br><span class="hljs-built_in">string</span> issuer = jwtSettings[<span class="hljs-string">&quot;Issuer&quot;</span>];  <span class="hljs-comment">// JWT令牌发布者</span><br><span class="hljs-built_in">string</span> audience = jwtSettings[<span class="hljs-string">&quot;Audience&quot;</span>];  <span class="hljs-comment">// JWT令牌接收者</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">string</span>.IsNullOrEmpty(secretKey))<br>&#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InvalidOperationException(<span class="hljs-string">&quot;JWT 密钥没有配置好&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">byte</span>[] key = Encoding.ASCII.GetBytes(secretKey);    <span class="hljs-comment">// 将密钥字符串转为字节数组</span><br>builder.Services.AddAuthentication(options =&gt;<br>&#123;<br>    <span class="hljs-comment">// 设置默认的认证方案和挑战方案为JWT Bearer</span><br>    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;<br>    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;<br>&#125;).AddJwtBearer(options =&gt;<br>&#123;<br>    <span class="hljs-comment">// 在开发环境可以设置为false,生产环境必须设置为true，强制HTTPS</span><br>    options.RequireHttpsMetadata = <span class="hljs-literal">false</span>;<br>    options.SaveToken = <span class="hljs-literal">true</span>; <span class="hljs-comment">// 是否在HttpContext中存储JWT</span><br>    options.TokenValidationParameters = <span class="hljs-keyword">new</span> TokenValidationParameters()<br>    &#123;<br>        ValidateIssuerSigningKey = <span class="hljs-literal">true</span>, <span class="hljs-comment">// 验证签名密钥，确保令牌没有被篡改</span><br>        IssuerSigningKey = <span class="hljs-keyword">new</span> SymmetricSecurityKey(key),   <span class="hljs-comment">// 用于签名的密钥</span><br>        ValidateIssuer = <span class="hljs-literal">true</span>, <span class="hljs-comment">// 验证令牌的发布者</span><br>        ValidateAudience = <span class="hljs-literal">true</span>, <span class="hljs-comment">// 验证令牌的接收者</span><br>        ValidateLifetime = <span class="hljs-literal">true</span>, <span class="hljs-comment">// 验证令牌有效期（过期时间）</span><br>        ValidIssuer = issuer, <span class="hljs-comment">// 有效的发布者</span><br>        ValidAudience = audience, <span class="hljs-comment">// 有效的接收者</span><br>        ClockSkew = TimeSpan.Zero <span class="hljs-comment">// 令牌有效期时钟偏移量，默认为5分钟，这里设置为0，表示令牌有效期必须与当前时间一致</span><br>    &#125;;<br>    <br>&#125;);<br>builder.Services.AddAuthentication();   <span class="hljs-comment">// 启用授权服务</span><br><span class="hljs-comment">// JWT配置结束</span><br></code></pre></td></tr></table></figure></li><li>创建JWT Token生成的方法，修改登录逻辑<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">private</span> (<span class="hljs-built_in">string</span> Token, DateTime ExpiresAt) GenerateJwtToken(User user)<br>&#123;<br>    <span class="hljs-keyword">var</span> jwtSettings = _configuration.GetSection(<span class="hljs-string">&quot;JwtSettings&quot;</span>);<br>    <span class="hljs-keyword">var</span> secretKey = jwtSettings[<span class="hljs-string">&quot;SecretKey&quot;</span>]!;<br>    <span class="hljs-keyword">var</span> issuer = jwtSettings[<span class="hljs-string">&quot;Issuer&quot;</span>]!;<br>    <span class="hljs-keyword">var</span> audience = jwtSettings[<span class="hljs-string">&quot;Audience&quot;</span>]!;<br><br>    <span class="hljs-keyword">var</span> key = Encoding.ASCII.GetBytes(secretKey);<br><br>    <span class="hljs-comment">// JWT 声明 (Claims)：这些信息将包含在令牌中</span><br>    <span class="hljs-keyword">var</span> claims = <span class="hljs-keyword">new</span>[]<br>    &#123;<br>        <span class="hljs-keyword">new</span> Claim(ClaimTypes.NameIdentifier, user.Id.ToString()), <span class="hljs-comment">// 用户唯一标识符</span><br>        <span class="hljs-keyword">new</span> Claim(ClaimTypes.Name, user.Name), <span class="hljs-comment">// 用户名</span><br>        <span class="hljs-keyword">new</span> Claim(ClaimTypes.Email, user.Email), <span class="hljs-comment">// 邮箱</span><br>        <span class="hljs-comment">// 可以根据需要添加其他自定义声明，如用户角色</span><br>        <span class="hljs-keyword">new</span> Claim(ClaimTypes.Role, <span class="hljs-keyword">nameof</span>(user.Role)), <span class="hljs-comment">// 假设 User 实体有 Role 属性</span><br>        <span class="hljs-keyword">new</span> Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()) <span class="hljs-comment">// JWT 的唯一 ID，用于黑名单（可选）</span><br>    &#125;;<br><br>    <span class="hljs-keyword">var</span> tokenHandler = <span class="hljs-keyword">new</span> JwtSecurityTokenHandler();<br>    <span class="hljs-keyword">var</span> expires = DateTime.UtcNow.AddHours(<span class="hljs-number">1</span>); <span class="hljs-comment">// 令牌有效期为 1 小时，可以根据需求调整</span><br><br>    <span class="hljs-keyword">var</span> tokenDescriptor = <span class="hljs-keyword">new</span> SecurityTokenDescriptor<br>    &#123;<br>        Subject = <span class="hljs-keyword">new</span> ClaimsIdentity(claims),<br>        Expires = expires,<br>        SigningCredentials = <span class="hljs-keyword">new</span> SigningCredentials(<span class="hljs-keyword">new</span> SymmetricSecurityKey(key), SecurityAlgorithms.HmacSha256Signature),<br>        Issuer = issuer,<br>        Audience = audience<br>    &#125;;<br><br>    <span class="hljs-keyword">var</span> token = tokenHandler.CreateToken(tokenDescriptor);<br><br>    <span class="hljs-keyword">return</span> (tokenHandler.WriteToken(token), expires);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>使用注解保护API<br><code>[Authorize]</code>：必须通过JWT的考验<br><code>[AllowAnonymous]</code>:允许匿名访问</li><li>客户端如何存储和发送JWT<br>TOKEN存储在本地，每次发请求的时候把TOKEN放在HTTP头的authorization里：<code>Bearer 这里写TOKEN串</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-16</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-16/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-16/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天主要学习了EF Core中的更改跟踪、日志记录、事件和诊断和一些C#独特的语法。<br>EF Core:</p><ul><li>更改跟踪<ul><li>实体状态：没有跟踪、已跟踪（已添加、已修改、已删除、未更改）</li><li>更改检测：快照【默认&amp;推荐】、通知、手动触发</li><li>更改跟踪器API：访问跟踪器中的数据</li><li>标识解析：缓存作用-对一条记录进行查找后会放入跟踪器中，后续相同的请求直接从这里拿</li></ul></li><li>日志记录、事件和诊断<ul><li>Microsoft.Extensions.Logging:.NET官方抽象</li><li>简单日志记录：快捷的日志服务，用于开发</li><li>事件<ul><li>传统.NET事件：SavedChanges()前后执行</li><li>拦截器：自定义特定的接口，在接口相关操作前后执行</li></ul></li><li>侦听器：在EF Core的内部操作执行过程中的特定点拦截、修改甚至阻止这些操作</li></ul></li><li>诊断侦听器：相比拦截、侦听器来说，能捕获更加细致的信息，更底层<br>C#:</li><li>索引器：让集合也能像数组那样用[]</li><li>解构赋值：一下子创建、赋予多个值（多从元组获取）</li><li>LINQ：用类似SQL的语法操作集合，比Java中的Stream API更强</li><li>部分类&#x2F;方法：可以把类、方法拆分成多个，运行的时候再组合起来；多用于自定义框架</li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-15</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-15/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-15/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天主要学习管理数据库架构、查询数据、保存数据这3个章节。</p><ul><li>管理数据库架构<ul><li>迁移：写好C#实体类后用迁移指令生成数据库表，更换环境后可以再用迁移指令复刻当时记录下来的数据库表</li><li>创建和删除API：用于测试环境</li><li>逆向工程：先创建数据库表，再生成实体类型代码</li></ul></li><li>查询数据<ul><li>跟踪查询：DbContext默认记录查询结果，在调用saveChanges()后，会自动生成执行相关的修改代码</li><li>加载相关数据：当一个类拥有其他类的数据时，指定被包含的类如何加载<ul><li>预先加载：【推荐】查询主实体后立刻加载</li><li>延迟加载：查询主实体后，手动加载</li><li>显式加载：访问导航属性时再加载</li></ul></li><li>拆分查询：将一个大的SQL拆成多个小SQL</li><li>复杂查询运算符：SQL中的聚合函数</li><li>SQL查询：直接使用原生SQL语句来查询</li><li>查询标记：为生成的SQL语句产生注释</li><li>NULL值的比较：SQL中的NULL值严格来说是UNKNOWN,在比较2个NULL值时要用Object.Equal()</li></ul></li><li>保存数据<ul><li>基本保存：跟踪查询直接使用SaveChanges(),非跟踪查询需要追加Attach()或Update()</li><li>相关数据：当一个类中存在其他类数据时，添加&#x2F;删除&#x2F;修改父子关系都会导致父类&#x2F;子类同步被添加&#x2F;删除&#x2F;修改外键</li><li>级联删除：默认启用，删除父类时，子类也被删除</li><li>版本冲突：EF Core使用乐观锁</li><li>ExecuteUpdate()、ExecuteDelete()：直接在SQL服务器执行修改&#x2F;删除操作</li><li>事务<ul><li>显示事务</li><li>隐式事务</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-14</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-14/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-14/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天开始进入EF Core的学习，主要学习了 DbContext的配置和初始化、创建模型 这2个章节。</p><ul><li>DbContext的配置和初始化<ul><li>概述：数据库上下文，记录实体类、数据库的信息，负责与数据库的交互操作</li><li>上下文池：池化技术，统一管理、分配使用上下文，提高性能</li></ul></li><li>创建模型<ul><li>实体属性：C#中，字段和属性是2个概念，EF CORE会以属性为标准作为数据库中的列名</li><li>生成的值：数据库在INSERT&#x2F;UPDATE时自动填充数据</li><li>阴影和索引器属性：C#类中不存在，但是想数据中存在</li><li>关系：在多对多的关系中，EF CORE会自动创建中间连接类</li><li>索引和约束：主键、外键自动创建聚集、非聚集索引</li><li>继承：父类和子类在数据库中的存储方式（TPT、TPH、TPC）</li><li>支持字段：EF CORE默认以属性作为存储在DB的字段，此时可以手动指定</li><li>值转换&#x2F;值比较器：C#类 &lt;&#x3D;&gt; DB字段</li><li>数据种子：启动程序发现DB为空时，初始化程序中定义的数据</li><li>高级表映射：一个包含其他类中的类数据存储在1或多张表</li><li>无键实体&#x2F;从属实体：都没有主键；后者依赖于父类，前者只用于查询</li><li>空间数据</li><li>批量配置</li><li>具有相同DbContext的交替模型：一个上下文基于不同条件绑定不同实体类</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周志25-7-12</title>
    <link href="/%E5%91%A8%E5%BF%9725-7-12/"/>
    <url>/%E5%91%A8%E5%BF%9725-7-12/</url>
    
    <content type="html"><![CDATA[<p>周志&amp;学习报告</p><span id="more"></span><h2 id="本阶段我学到了什么？"><a href="#本阶段我学到了什么？" class="headerlink" title="本阶段我学到了什么？"></a>本阶段我学到了什么？</h2><ol><li>跟着官方教程上手了.NET Core中的 Razor Pages、Web API和MVC项目，实现了这几个项目的基本增删改查效果。</li><li>熟悉了.NET Core中的重要概念，如：依赖注入【类似Spring中的IOC】、中间件【请求发送过来以后会经历除了控制器类方法之外还有一系列中间件的处理】、配置【控制某些程序比如日志的执行方式】、多环境【更高次元的配置（换环境&#x3D;&gt;换一整套配置）】、日志【记录程序的运行状态，便于排查问题】、HTTP上下文【请求里都有些什么信息】、路由【请求发过来以后匹配哪个路控制器类中的方法】、静态文件【wwwroot】、异常处理【开发&#x2F;生产2套逻辑】、Web API工程中常用的注解、请求处理方式【基本和SpringBoot一样（注解、处理&#x2F;响应方法）】</li><li>了解.NET Core中一些偏底层的应用，如本机AOT【独特的编译运行机制，简化、加速程序运行】、主机【Program.cs前几行定义的程序启动的核心】、分析器【IDE、SDK等环境给你的提示、警告】</li><li>定期记录并上传日志、笔记到云端zhiyun.blog、kd.zhiyun.space</li><li>了解到今后的新能源项目会用到哪些技术，项目实施的现场环境</li></ol><h2 id="本阶段我发现了什么问题？"><a href="#本阶段我发现了什么问题？" class="headerlink" title="本阶段我发现了什么问题？"></a>本阶段我发现了什么问题？</h2><ol><li>在学习依赖关系注入（服务）这一章节时，发现与Spring容器相似，但没有找到另一相关概念AOP的知识</li></ol><h2 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h2><ol><li>在网络上查找相关资料</li><li>使用各种AI大模型提问，如GPT、Gemini等</li><li>与周围的同事交流</li></ol><h2 id="下阶段学习内容"><a href="#下阶段学习内容" class="headerlink" title="下阶段学习内容"></a>下阶段学习内容</h2><p>下周开始学习EF Core，然后尽可能多得利用所学知识做一个增删改查DEMO</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>周志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-11</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-11/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-11/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今日学习内容：</p><ul><li>HttpContext<ul><li>HttpRequest</li><li>HttpResponse</li><li>RequestAborted（请求失败&#x2F;被丢弃）</li><li>Abort（手动停止请求）</li><li>User</li><li>Features(底层实现)</li><li>线程不安全性</li></ul></li><li>路由<ul><li>路由的2种使用方式<ul><li>约定式（统一配置规则）</li><li>特性（注解）</li></ul></li><li>路由模板</li><li>路由约束</li><li>特殊路由段</li><li>路由优先级</li><li>路由组</li></ul></li></ul><p>日志归档：</p><ul><li>zhiyun.blog</li><li>zhiyun.space</li></ul><p>笔记归档：</p><ul><li>zhiyun.blog&#x2F;kd</li><li>kd.zhiyun.space</li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-10</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-10/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-10/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天继续学习中间件、主机、配置、选项、环境、日志记录与监视<br>承接昨天速率中间件的学习：在主启动类注册好了中间件后，还可以在控制类&#x2F;Action方法上利用注解更精确地指定该类&#x2F;方法使用的策略；<br>响应缓存中间件能够对用户对同一个接口的访问结果进行缓存，但该中间件没有手动删除缓存的操作。在主启动类启用该中间后，也需要在控制器类的方法上利用相关注解配置其具体的缓存选项。<br>请求解压缩中间件能够检测传入的HTTP请求中是否压缩过的请求体，是的话会自动对其进行解压，该中间件默认支持Gzip、Brotli算法<br>中间件可以自定义，其中有一种基于工厂的实现方式，其优点是能够自主控制中间件的实例化方式。<br>配置的加载、覆盖顺序与SpringBoot中的规则相同，命令行配置大于代码配置。要在程序中读取配置，可以直接注入IConfiguration来读取，另一种是使用选项的方式，此方式是将配置绑定某个类上，然后再读取类的数据，此种方式还能用利用数据注解对字段进行验证。<br>环境比起配置而言是更高层次的程序配置，环境配置覆盖顺序与配置覆盖的优先级顺序相似，环境配置能够在代码中进行访问。<br>日志的几个关键点：类别、级别、ID。日志的使用方式：配置、注册、使用。除了.NET自带的日志，还可以集成第三方日志记录提供程序。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-9</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-9/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-9/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>跟着教程快速上手了基于控制器的Web API 和 最小API，之后学习了基础篇中概述、应用启动、依赖关系注入（服务）、本机AOT、中间件的部分内容。</p><ul><li>Web API与MVC不同，是纯后端接口，自带SWAGGER用于测试接口，最小API是用最少的程序文件和独特、简洁语法的WebAPI</li><li>依赖关系注入这一章节与Spring中IOC非常接近，其核心思想是将实例交给容器管理，避免频繁NEW。在主启动类中注册服务类，然后在需要的地方进行注入（最常见的注入方式是构造函数）</li><li>本机AOT是一种全新的程序执行方式：能将.NET程序运行相关的所有代码、依赖编译成特定的机器码达成一个能直接执行的文件。</li><li>中间件是按照顺序执行的、构成程序请求管道的一系列组件。<ul><li>中间件使用顺序非常重要，错误的使用在某些情况下会导致程序崩溃，比如把用户的鉴权放在了认证前面。</li><li>中间件能用于限流，能划分用户群的限流分区、对不同群里应用不同的限流算法、执行不同的限流后响应。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-8</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-8/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-8/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>今天实践了RazerPagesMovie的剩余部分和MvcMovie。</p><ol><li>在Razor的cshtml中，C#与HTML的混合语法写起来与JSP类似，其指令均以@开头。</li><li>在纯Razor案例中,cshtml展现数据，旗下cs处理数据</li><li>这两个案例实践中:在Models目录中写好种子模型类并在主启动类Program.cs中初始化，便能够实现（在数据库表无值的情况下）自动生成事先定义好的数据。</li><li>要实现编辑数据时的约束，可在模型类的字段上添加注解。</li><li>与Spring MVC相比，接口方法的路径声明由方法名决定，Index为默认访问路径，请求方式、路由可以在注解中声明。</li><li>在接口方法参数中，（默认情况下）id是路径传参（可在Program.cs更改），其余名称是字符串拼接，并且声明参数的左右位置不影响实际传参时的顺序</li><li>Shared目录下的Layout.cshtml是所有页面的整体布局，其中@ViewData[“Title”]显示的是其他页面中定义好的该变量；@RenderBody展现的是各个不同的子页面。</li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日志25-7-7</title>
    <link href="/%E6%97%A5%E5%BF%9725-7-7/"/>
    <url>/%E6%97%A5%E5%BF%9725-7-7/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>跟着官方教程快速上手了部分Razor Pages Movie、了解工程中的各个目录&#x2F;文件的作用、程序启动后各组件之间的联系、@{}&#x2F;page&#x2F;model指令、本地数据库的GUI操作，过程中留意了一些C#的语法。<br>实操步骤主要分三步：</p><ol><li>创建工程</li><li>建立实体目录、类</li><li>建立页面目录、生成CRUD代码<br>  a. 根据写好的实体类 “使用实体框架生成Razor页面（CRUD）”<br>  b. 利用 PMC(程序包管理器控制台) 的两条命令：<ul><li><code>Add-Migration</code></li><li><code>Update-Database</code><blockquote><p>在修改实体类后，可重新执行a、b步骤同步页面与数据库</p></blockquote></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>MT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>日志</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录4-27</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%954-27/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%954-27/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="68189314f4090792340e1353a1c4b2bef6ceaf77f0b636e6189201df0468377d">281243a4c852def009ab246a1c5a8bfd51c7c6c77166c99653545a1bd804051c77c33fdb4ee7b4e4371b965092c8c9154f8afa320c830cc5694b33e53db39c4537e65e618cfb916d5ff2a159f222622b7df7e6c3df1f00415d6cdd6e9d50502b6051d4db295bf3889a5a9b214163a7d8c7f753ade43c15e4175f6e570331293cba0d758e26360604357e86b661a5474f9082acab8ac58f2ed0a9903d4c5fda329b45472e8a4957d7fafd092bdb2e00bdb9c8948d72f90a838292b4acd28c177428afdf981c16681a97237a33d857bd451fc165453fbd1e53cb7a652f573466771c68777a652b119a09ab44265ef82d5c959c49a701d16e53fd91c1be0a2e5371d46b9dac7acca82f120ee8d8a4f981328534a88b0367b868b67cc54aab679c1ffe6831e8a38e1f99bcc4d877901285262be59253c7503e8d32b4566d6ac03a5596445dc2690b50ede0d8bf458f1be42eddd7f10370e4369fbe785bfd4c4716b2cb1604ed82374601b71f671156b84ecedc07c30b36521eea62fd4ed872e4ff4c8619ab803dde0673268ef4567ff5aa1e49f094c44016681bdd70e3f138cd83e1989f72f7ffcc83b20ddb87f0a17231543cc2b430e3bf4767f96cf2951b97cb2ebcbc2e407ea65b45cd2d80e7485a139841affb118fe46e125dbbca07064407a50187e17efb58b6fdecd3bcf755adedf033d381efb4fba73c16bb2890b54b41b1398b4d2943c350b0bad1a30290093eb52552ced69c2e63bf37f691ec16dddccbd332b43824245765e7c70c897a586ca2166adb749afea15ce13a73bcaa0205bc0bc819b206e0ab75f07cf68c5dbbaa3f1b96e230ffcf02a85975fa5b55d9223a5ed101a64b96fa2b434cd7def3548d39faa553f98a9f939a297bded27abb2372a88aa3df7bb57b2e5a71fe530b12ab00bc1ec0794ee1937b1ea9e56d33300e4da78e823b512672caec5def347a6a4a6711254f44db250e40e0a9c46bb95bdc9a6453eda68bc6452a0ef0f84e678359ba4826b15ecb0ce2c4b8b7af645f4b15579a46c35faea008465a245a4a663192cdd9c6e06d5e7d463621a34a523b4fb3bbf78f16c029eb38ad1c4848fbb15d982a5ce1668c50e0fb1ffc426332e27b75d6f699ae5e9b084e4b3524d6b189eee5681a8153cddd9f6129a9e340826969ffaa49ef73c3be52da08a0c3906192905e43fe80c9a79e10e2e39df8c71d52a20cebc3f9b89afc0a7decd4a4c0620cc7a7615e706679d81e8c051f553fa02ac47882500b11b5a8638bd7626dbd3f9cd03baa41c90837fcac47feaa8f3a753aec9114b1d7aae846f85d7736fe70ff2c81481861f29ba3746a1465f0870cd4040f1a80</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正颌正畸25-4-22</title>
    <link href="/%E6%AD%A3%E9%A2%8C%E6%AD%A3%E7%95%B825-4-22/"/>
    <url>/%E6%AD%A3%E9%A2%8C%E6%AD%A3%E7%95%B825-4-22/</url>
    
    <content type="html"><![CDATA[<blockquote><p>16岁，我第一次因智齿发炎而去附近的口腔诊所治疗，同时得知了自己有反颌（地包天）的问题，诊所的医生告诉我这种情况若是10年前发现可以只通过矫正解决，而现在必须依赖手术了，并推荐我去上海9院看。当月我便去了上海检查并首次得知<em>正颌正畸</em>这一联合治疗方案：18岁后骨骼稳定了才能开始治疗、期间每隔一个多月去一次、总周期3年、总费用15万（不可使用医保）；我还记得当时医生最后说：“这个其实做不做都行，主要看你自己”。</p></blockquote><span id="more"></span><p>20岁，我忙着备考，考上之后又想等工作稳定之后再去做（此时家里人并不反对我做这个）。现在22了，在校外实习，虽然算不上工作稳定但我认为已经可以去看了。于是又提前做了点功课，结果家里人这时候又反对我做了。我想治疗的主要理由是提高咀嚼效率，父母反对的主要理由是伤筋动骨后遗症太大。我的症状非常明确，只有通过手术才能治好，但父母还是希望不开刀，做做矫正稍微改善一下咬合问题。</p><p>（沈国芳）专家的号源紧张，提前2个礼拜放号出来的当天早上就得约，晚上很可能就没了。因为父母此时反对我治疗，我只好抱着看一看、听听意见的想法去就诊了……</p><p>进门之前，主任的助理就拿了张治疗流程单子给我看：如果打算治疗，首次就诊得做一堆检查（有2个项目还得预约之后改日做）、二次就诊是做口腔模型、三次就诊才会讨论具体的治疗方案，这一整套实施治疗之前的流程下来怕是得有半年……</p><p>面见医生后，我得知自己除了反颌还有偏颌的问题（我以前照镜子的时候就有感觉到异常，老妈居然还说看不出来……）。得知自己的实际情况更严重后，我更想做这个治疗了，但苦于当下父母的反对，我还是没能将事先准备好的问题都拿出来，我又不能说自己和父母的想法相悖；还被他吐槽说什么“没想清楚要不要做就过来了、问起来什么都不知道看病效率低”。这话听着就很奇怪：医院作为服务提供者居然要求服务消费者事先做一大堆相关功课？服务者不完整提供相关信息供消费者选择反而让消费者自己预习、提问？难道专家门诊只负责治疗的执行？不好含讲解现状、治疗流程、注意事项等前置知识，然后引导作为外行的患者做出选择？<br>“挂专家号就是打算接受治疗了，那之前的相关问题应该在普通号问清楚，确定治疗后直接来专家号这里根据个人情况讨论定制方案”。我得出了这样的结论。</p><p>今天看完病，昨晚还坚决反对的家人表示你坚持要做就做吧。我昨晚听到反对意见或都快放弃治疗，打算这辈子就这样了，所以今天医生感觉我还没想好做不做的情况下，我也自然而然没问具体的治疗流程和细节。</p><p>折腾了一天结果并没有什么进展（虽然也没抱太高期望），下次来应该是正式工作稳定之后了……</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>医疗</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正颌正畸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Navicat连接云服务器MySQL</title>
    <link href="/Navicat%E8%BF%9E%E6%8E%A5%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL/"/>
    <url>/Navicat%E8%BF%9E%E6%8E%A5%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8MySQL/</url>
    
    <content type="html"><![CDATA[<blockquote><p>用root连接搞了好久没连上，最后重新建了一个用户成功了……</p></blockquote><span id="more"></span><ol><li><p>先去服务器的MySQL命令行执行如下命令：</p><ol><li><code>CREATE USER &#39;用户名&#39;@&#39;%&#39; IDENTIFIED BY &#39;密码&#39;;</code></li><li><code>GRANT ALL PRIVILEGES ON *.* TO &#39;用户名&#39;@&#39;%&#39; WITH GRANT OPTION;</code></li><li><code>FLUSH PRIVILEGES;</code></li></ol></li><li><p>Navicat新建连接，分别在以下2个标签中输入连接参数：</p><ol><li><p>常规</p><table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>连接名称</td><td>随便写</td></tr><tr><td>主机</td><td>localhost</td></tr><tr><td>端口</td><td>3306</td></tr><tr><td>用户名</td><td>第一步中创建的用户名</td></tr><tr><td>密码</td><td>第一步中创建的密码</td></tr></tbody></table></li><li><p>SSH</p><table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>主机</td><td>云服务器IP</td></tr><tr><td>端口</td><td>22</td></tr><tr><td>用户名</td><td>服务器用户名</td></tr><tr><td>验证方式</td><td>密码</td></tr><tr><td>密码</td><td>服务器密码</td></tr></tbody></table></li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试记录3-27</title>
    <link href="/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%953-27/"/>
    <url>/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%953-27/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="f8ad7bff939302594129d19668233651228d90bf773b39fe2b4367f27c69b864">281243a4c852def009ab246a1c5a8bfd982dc303f9528e063fdbbffbeeda7354da441f9ac63fb7e1857e9458de957afe9a8701b002017670203860b20d58a1df98adcea59cb645d664e4b7826ed8ce5a4e3b1e9cb3a6260a07be6b1d6c84986c4b2bbc6cc83dc2698c0a02bebe17a854a0da5398abe04cb9a38007409fa9dfabd3952998fe3971b99c084a7df00639e8c85cabac77b07bbdadecf35e3adde7501c191853a964a99d5ffc3b2db70995dd3b8c723dfe0771540e2a1308bd11e7a9ec2220ed55bbb0df2133ee6390ac635b86cbbae845e82fb1772da5915c18ffe8e8496528d761364b6a9e044eae2573dbb60f45c3b48063492c7d7fef9149f4d65d8595b8b34286d2fe8386928af156d4bd4ce3e0c5ca9bec20c5fc62d68a9c6bfd3cb54ab1bb33c0b2912a201a6a1419292880e7cc3f22c351818696db6c48c6594d89033e049fbe12a6a732a9650321ec44cfcd18a2d319bc9f35c5eea4228c690ef1b692a9fdbcde538ccd84abb07995eca978b8e4ae55a8cf4b4a07c9da01b057a8c56800872560f2d6f110df35e78e3dac7a780adab52ea48f5cd620a7b34b9e56cb146078a25d855f3016e3de1ae83c4cdf6a6d2caa3b61de30fb0c06b5019d7ad752854c84f7bbd64d603eb3b500733eea4aa4bfbbe9702a871683e7187d72d2fa0e7fc5159f295a4c38ef66b73ded7b9a1e3ec2535fa2e42abc69f94e60b5247c3d41d3b8f522ee3b2d3662f39e8a23728323472e21364a2bb45c6b71dac2de4d940fd8edd911ded087c9cfcb2a33e6a2f1c05e246130d15cca1c74a9c5c9a199d8d90cf66c898ad1721997ad14484f2ec06ae25ba144463ec89fac1b5c1363ac6c8f3050c816127e3c03665e235a203df06448332505697365b7f7dc2b2622d10d4a61d9aa4743e4531dca21d598617e880bb28e307ccfe238a6366102106e75dec8a991a43510957ecb1e85560d160b7ddc5debad86d34624997504232c90d0756a80a81ceed578c4d22246292dceaaa51b4cb81bc389288b7061c46fe0d64b56131d857f5796ba814db1a0817c07a3d478d172c6e49da978517a5a70daa9f0af7be7aa50732ac3178471ad1cf2dee6f7e783fbddddec5a0893e2fa4736c3e8dc5f20bbd03be6974acd2c1b0480a5839f961f92c0db88e74e3ff597659af6c39aa32bbb018ecea8910d897968b8ebf7ca218833542e98a22581c7fe77c34c6263900b973c4f290589d52bca434b96b699426dfabd7153e920a331b339c568f9e45d674d325af230307730385f931ac0d6b3788294f21a185c62d97368af199d33485ef2aa2c24c3378bd8ea80ee6c44342c2a58c5ec92bd0e70df9ca4999e1c0db7b1f4acc5b924f06efbdf31ee18777e5429714e48ba5d35c1908aa021c4fff84649abb47924f3ae1f7139c9835642b315a52af68f9084d7ff1f871455839d098c8e63c922f638b029da91</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试记录3-25</title>
    <link href="/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%953-25/"/>
    <url>/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%953-25/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="a6825aace22086fdf8a65edca6eec88f0be09e0da240a3098c2dbddbaf864956">281243a4c852def009ab246a1c5a8bfd7e718efa759649b0d2731c2765f8a3a477c227bc428388f10601c71938e263e263011ff72ea1811a0405d4b4e7c9a5af2def6a6c8d7aae65906a8472afe3bd3e8a8681c7b7d66769fae62c1ea2fa5dac9ef91c0f9cf816179acb25255463588bcfa47f3fcd88181447b09661b4be328d69d7691d3e788bbf3303eeee37d42d757fa2f31f3a4e8fc65f64623e061f6cbf84b7ef62fbd444fca340ef060d61fdc18abac9aac846ed16d4e61a19687df1fac122b94d5ae7721c45e04a6fe4680c8aac24d390a6e9438f52af603665e249a7f038be61acf99bdb5236183dc6162ea3860396d4ec5c57a27c421099f28b385f6242677aea87ed56193e376d91c9542150f91e0864df565964ea3f74471b8c087a0c22918e041aabb3941103682059fb2eb77b630dc21f56f0eb535e77ceb568bf06f7a3f41486c150fe3ead481c3294abf6b41033d2a6f084d4c16a21fad36dd58a41586ff9ae5235d04e68db01f53d7bc28a3a5ceee5f20fbbd45e96efaa4e76de5e226c02bebbef9959aa36838760b1f77a3c70839464c83c7c7962c6206d523c62289d536bc0fa2f7ea5a7a348af7b9122e54c3b6f78c3118f7eff1f8221085377a593a2a690864e3955440eebb38683b641a599517a7c5867a199bed0f28f4c6a397b97aaf88133ad6e6a6d7c4544db7c0061ffbbdf941790a2b6a0e130fb4c35ef06417e783b867b0c65a22d122306bf4da48cf2637bf6eba5ba8dfe06d55cadb3d645e3213dc05799e473f502c428384f087a97d691b1fc0b33cb0ae1ee4373ee5a49324950d3bce18add559106e1667ff57f9fbca37f57575fc9b13890882be4ae31476562934adf507fae405517c443928e6527641b72dcea15c8f95e79d6c6fe857794d23f17c845056e20e318cab8f86a76d77fdf77d515cd73887645600d2e09f857430e6dd5320f68b850a52e5f3df35f0a6c4e9aced4879f5dd78ac8a0b81b7ec36694de41dff2ffee43c0fa4166287bb100ae30ecfd7214ddc7881f53a26874398d11ad5c158fe172f1c0177efa6ce01f3177d61cf2b695d1756057c9449a465610b81896e69339fe80dac43fa705b723f787b8c21d7541210d3e6f9e44d7d0864604aeb56da687b3feff4c9a7791f4cacf457cc8e1b529ba6b6492f081c028473d9cdf112c8c7c9da7d8259b48de9aa1621edc12c13f10f9a6477c605fd41bf3fa78e9201cc4bdc48d053b5da3606ae560cdaca344e1be2a64ad37e0612ccee7c12f3613d7a882d6ab04e9140ebaab7ded6ac48b40b8230b0a871ba9a25d247d7e99c99dd1e8b75770f16b3868d2b97b05d09a86baa1bfdcbed0ee9f4e7cbf5c8f0223ace79ac03fd92f82cc28b44b29fb85355dc9df69494417aff19d57ff98e780d1c930837e9946132809cc461f21b5c3b08e0b50e251496756657a8739479c4d08494c06e630bb81d2b7a31e0ca993a2ec5f1a376c4f375331c7fa29dbbdea84f9a9bf7253e776800feaaea7fe1eb1217fc56968b0fad6979b0fc2fb1e6d5329841949a5195daaf75fa3cd088712a9d032b0669fbb047e1455cf93cb3e390f94aa9195a4903aa943f16b574e33731b23d9d33cf7dd9c3ea95e76313ae018e4db578bf467da33c54593a561258b44550caf58ac590eb8b516f0976630ab771317a92030a9d4246ec1d9c48d6ac19ec6d43df9660cef3a48e0c764cc143136ab3ade4417a6fe3b67d51dbcb2fc4c47ec423ea5cabbc78164bc46cb7a249665c5465f57ec530e65feda28f23fcdad47664a8b362b227c7dcb3c9198ce6ccd0e07be757ecfab6059e79acc1b48772d7fafb4fb3e2e574e9842d336d187f31e3c79e8006f7af325b343faac30989895edfa8953828e9d1bfb0e77188003d2947ccef80d60aecb13126d8f911a7c23277c54d47c16800427d7759c9aa2414b76e0fd0c58a1032504443639a5133d962d4c9fa1d690ff3d4b2ffcb600f67eb65bf9739cb18493da63d48bade1e1776eba70eb41580189e55df556506f0c2877428783ae2bd7515110a17cf64455291afa16bb6be7f854950acafe7e5426c5817d1277099a2e492fdcd0767d5b163b4fb672a909eca88135f248725fc04f54cbc5cd13b23f36ab7cb919b848e346b2bec5ba3211071a27a784178cf1d638b8a4b6e4bdcfd610f9cb3e8edf0afabf9fb8f9f1259639c47b817e5d4699b32d7944c8815324039e0fcf924ddd984646e54781c4882e124094623c015e28d691295a1d36cc39793329e046fe8fffe62e5039a3b547ecfec41b33891f8026baa28c7f679cd4401784f6ae4b86eef70d5df4cc8292ffb38d84a74bba6e0650c67d5be4e2dca6bda491ddc0d72322f05997ee08b2c1081a751a44c4075c6f40e500ae85915258b41ba685b8e3a964c28b48ca5c6f065a9a8ebd0c3ac08e8288a51e6425976192831b2a9541d91e8c48fa9f8bbad7ca764d4ed585dc5973acd9a82e659125e315cfcea675886c6fb022b15288ef714d6c0d31cb0cb0ba30be6d7afa29c9a79f5b56a9f98038ce7e84c2db77e3c875ed7a8f1ecc108773bfc8ec801c0b39497f2d244073b406e81a4584e85e461247c9051a7e2c50425ee74d48f173a59a05befd2d115274711c11d38e68100a923f42b50227386c89bd49ec247c076cfba61443eebb631c98f15c7287b4e5b07d1672c4ad793e608e162806adae6ed05b033ebc4336b1092b5b3f32735a1ec7f39d92bd8f1699587d1d3f2662ee6dbffd0dbe93145fbabff130b15ee1de3176b1f59514b140231a5c7a4619c51333f353a8fbbdb5813946b2a9f7b43d2319e1a971188a59b4ffb8ad42ec2ac43bb5a7608b14825a55daf734bca5d9af5b3011069b48825a94051b4a2a1f92069ac5c89d4853e0ed1599af1f10a964a2c61facc457d8958dede5568cbf929e5b14dcf418b8d21eac023fa8871bcdeb17f18fd45e458473cf177b9834e03dd0e76133045b11579276f2e100f40c8e4d889482bebf32cd883a36ba7b6cb80f39d930cb4fa398d45dea36b273d37c6a3ef2beb077ce1f6ad285ddabfddc0151c405bcf65b3d43f6ed33be4477df1606a30d40cab67a7747e8f808a2f3399e92b90e51eae455c4539151482a58245657576be7b4b266de64eee10cd0924ce3fa904146efcda610d3444fe5bc7e67e50343716e7d7c7176245b24429e4900fde1f58505ab5ee9ce282e49a8fac30ca05f4fc330a0b67cbff6e58e0b19f68ec2a875fd97d00329872af5070c76b632f5dacc4b30453991f56747805dbd1d4a267285a0b5354f11c94afbd1a5e163598d3d43db5c6b0a287ae855124e76cc342c5ab5e118e5fa267829397f610a548d956fbf28403a8162477fd59fba1bd341f8a14988b73c28edfc2b3860cf74a461cc5c94a2b971d3b1ff590438f5c9b85cecd1688fb1b2c4be73babb24f5e7cc2d859e283d3c8d79c1ea92f219f98a7f6c5fd9a4af993df2a9210713cf90a1df85794319a58b49658ec5e5c9c436727d338423284840f721a15935d46219affad40591e727a2506f37f88a5736b0185b832ae825bf1a5afd1f9cbd9c8ded82148c7ef5fe235e0a9c829fdd2a9ef53697d7c49db2f3d6fb5395230153b19cc883247b379622e4b6bb255615256fa356a1a41b8a73f76bd8d6991704f27bbbd8298a0bea2244fcbee6ce7977d91198e3e2a2e333680bce6096ce71dc407f638addbd663b1ee96dea701c3d4078c3381aa2020e0e95d305428d35194a8b623e13e96d2e7d48f293318bcea383891d2cd76ffd20b4dc3fed968055e6d3328229dd495de86b19666bfa09988b47170992cfae84ff4b8c9b6566e6118389ff4cecbae661524e5624ad17d9afdd29f48fd1df99d326c07ce103c7931715dc994c3796712bbd8dfdc870941e44d9228d9b09c0d7725fd84976c6c2f19370d0d4d8480324a86397a8f2f84596047ba2a53561aa876b0eb35c5de4f71a04a492c9c659696195aabc12fdc90317aced84e3a25fb8393e3b64ee4d204db9e21274a82152a130516ca45cd13f23a3058bbe3e20a1f85f39e923a0cb2734181e55498b25f97927e17d32e408e744576e2828eb1ce5cdb8d0415415a71f4f9d17a3c1588c8ce5d3a940364f6f79c18b9b3701ed63f7de8c83f3374f4353d445cd9c181c10758637318ea0dbf4206de11fa5c45986d1f5d4f50f66012c4b29bf3b991696ca508611337619099b46698947d412d33ae59d6d0a805f0b45314a3300ea32e6196e955bef8631a680ca926865d0ad4f78c43e3a143016f486de876450ec60f13a77d8f170404b56a976308f87fff72282ea533d68347928ee671b00b053e31bca228c049ce8a72aa4246e2b0a67798ffb7ebe452d4c9ee407c14515c8a5757d540942dd9c44eb561870defc85721e39b7d58f224680dd5c42f106be013223b3f16e9f7f3d755e1094c6ecd93d7cd2254c4b194c0b9a6d65d6217fa3531897236096e9f4739563b085473a93153f46138d1152598a0211dd75be0c79d48e57fcacc626bfaf766fdd5132a592d7f4195a563b17c4a088bfca23ad81bb6eb0838089aeea8e78a78542c079c3bdc29d24f480e5f70b43799379cfeeada41d78057c67c417ed7440216bfbef7abe403aee637c84b8c2c9d8a3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试记录6-26</title>
    <link href="/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%956-26/"/>
    <url>/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%956-26/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="d697bc8de8000f7605d33bc21f88b930580d3d7235ec7afbcd2a320b0fd5e7cc">281243a4c852def009ab246a1c5a8bfd51c7c6c77166c99653545a1bd804051c77c33fdb4ee7b4e4371b965092c8c915e8093e98ea0e7ddeae7cb31af1cb69fcbbf9746b372145de38db493c608e49b10cb5cc73029dfe51f510e1ffce4f6555ce044c4615de0009637fcbf1aed03f92bd0e94400c537bb63edb308760acbdb372c0970bcc061a17d113bf1af03562ef48f1e4af78ec8df842f1fe17437f666813f8678c1b9ae39ff00a6aa343dd8224632a4344ca611b8a429b7115b78d74d7fe466ef534340110232a195f31a6f284b4233d019d0e5af109679352c1eb32ad2e851c5018d319d774d971b05ec66f6689f9de9b10bdf1dfd32e20beeb2f2b27e9149ab931982b93536fbd71375514fd081f1a684eae3e10989c62886cf9e4f6cd60fadae49200336f25254b80f3dc87684869ae3d5c905caaf22bce841544b7c063d4b11a475d8dc24f857bff1cc6092669fdb40d0b4d45c5639026875a85bc3f3b9ad8b9f2fc85622073416a9204950fd090cd2dd9e9e67a3d4e91e1093cfa73ef3f5e14f83244264b83d52d8ea11c0b1c3ebffff96a99d0bacb3cd7c6d7902cf5c5ea6d2f78d57d2321b8fadd333c5daddca2c74094c25f8850804366dcbc94d853b3da795b1e53b19c03a902c91455971ca5fffd38b80a22dc9822f4c2f96c74cabdc47b5ead1fb8c637ba5303da6e61279b3a9db791efb5e2f675e68439f41d3038b8b25fdff9fc84c7f87cbfcb0dcc0074a15f6a5045cb42fad5360b24</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Pages自定义域名、开启HTTPS</title>
    <link href="/GitHub-Pages%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E3%80%81%E5%BC%80%E5%90%AFHTTPS/"/>
    <url>/GitHub-Pages%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E3%80%81%E5%BC%80%E5%90%AFHTTPS/</url>
    
    <content type="html"><![CDATA[<p>GitHub Pages绑定自定义域名、（在NameSilo上解析）开启HTTPS</p><span id="more"></span><h1 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h1><p><a href="https://www.namesilo.com/">NameSilo</a>能用支付宝<br>国外域名最大的好处是解析云服务器地址时不需要备案</p><h1 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h1><ol><li><p>打开<a href="https://github.com/settings/pages">GitHub设置里的Pages</a></p></li><li><p>点击<code>Add a domain</code>，输入你的域名，之后页面上会出现如下文字：</p><ul><li><p>Create a TXT record in your DNS configuration for the following hostname: </p><p><code>下划线开头的代码</code></p></li><li><p>Use this code for the value of the TXT record: </p><p><code>数字和字母组成的代码</code></p></li><li><p>Wait until your DNS configuration changes. This could take up to 24 hours to propagate.</p></li></ul></li><li><p>在你的购买域名的地方找到DNS解析服务，添加如下记录</p><table><thead><tr><th align="center">Type</th><th align="center">Name</th><th align="center">Value</th></tr></thead><tbody><tr><td align="center">TXT</td><td align="center"><code>下划线开头的代码</code></td><td align="center"><code>数字和字母组成的代码</code></td></tr><tr><td align="center">A</td><td align="center">@</td><td align="center">185.199.108.153</td></tr><tr><td align="center">A</td><td align="center">@</td><td align="center">185.199.109.153</td></tr><tr><td align="center">A</td><td align="center">@</td><td align="center">185.199.110.153</td></tr><tr><td align="center">A</td><td align="center">@</td><td align="center">185.199.111.153</td></tr><tr><td align="center">AAAA</td><td align="center">@</td><td align="center">2606:50c0:8000::153</td></tr><tr><td align="center">AAAA</td><td align="center">@</td><td align="center">2606:50c0:8001::153</td></tr><tr><td align="center">AAAA</td><td align="center">@</td><td align="center">2606:50c0:8002::153</td></tr><tr><td align="center">AAAA</td><td align="center">@</td><td align="center">2606:50c0:8003::153</td></tr><tr><td align="center">CNAME</td><td align="center">www</td><td align="center">你的github用户名.github.io</td></tr></tbody></table></li><li><p>添加完之后，回到刚才GitHub的Pages域名设置页面点击<code>Verify</code>，此时GitHub已经成功添加了自定义域名。</p></li><li><p>找到你的博客仓库，进入Settings-&gt;Pages，在该页面上的Custom domain填入你的域名并保存。</p></li></ol><h1 id="开启HTTPS"><a href="#开启HTTPS" class="headerlink" title="开启HTTPS"></a>开启HTTPS</h1><p>刚才绑定域名设置的下方有一个<code>Enforce HTTPS的选项</code>，如果它无法勾选，并且提示：</p><p><code>Unavailable for your site because your domain is not properly configured to support HTTPS</code>的话，</p><p>回到DNS解析服务，再添加一条记录：</p><table><thead><tr><th>Type</th><th>Hostname</th><th>Value</th><th>Flag</th><th>Tag</th></tr></thead><tbody><tr><td>CAA</td><td>@</td><td>letsencrypt.org</td><td>0(non-critical)</td><td>issue(domain name of the certificate issuer to trust)</td></tr></tbody></table><p>此时Github上的<code>Enforce HTTPS</code>选项就能够勾选了。</p><blockquote><p>上面用的是NameSilo的解析服务，不同服务商添加SSL证书的方式不太一样，有些是可以申请免费SSL证书并自动解析的。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-15</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-15/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-15/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="2a64fa4323e6e124b78c5c7fbc46251d0b2e3ccbdcd16d427882e09fe6c2bc46">281243a4c852def009ab246a1c5a8bfd51c7c6c77166c99653545a1bd804051c77c33fdb4ee7b4e4371b965092c8c9159924eaa12487a27480aa1e39b8b652a3c6d9176c3fbbde8e3f171fb3ca6a3f3fb1b406d6eb75e6a3e154adaba479cbf6ad254f69b318d11af7d0d67ace6cfaf66d024149001876235243b5f622161ec31b0cc7c4e7efe6735909f2ed02c76710eddaf933156d991ee2159c0a3bfbbcefeea451f9fab36b41bde6ad5e483606d91acb96af653f019b85a3d56bdd6dadc42a48c8221508857959563119bb37a5584fbe6d518c48766dbd21f2f60a559c279161b9d788b7334c6e2315ff9545c3bb182604abc1527bcdb3e1eab452f14929915793222017ab7491f1977bdc571826f194227c768027d03096279430cbeafbd09f5b063fe75d6c61cc13fe234ded9192db73c6ab819209583bf2f02c32deeb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-14</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-14/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-14/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="814c8525459abdf7a573382a9d9997493c86267ea9e1bb5a92ab546b11c69825">281243a4c852def009ab246a1c5a8bfd2daef18fc39d629064c53b6a7e9b57d1cf9d8ea35e7292f0124a59a7cdb4b1a6d8424002b45fc879d1cdc475711c74e67eb8477d1d1ded252a401f74591c3be8fcb689dd88647eff30b22f18a8f390dcf1212f471ac8329b8f2ac69d23cd577c9553b417fce2645f50c2487ea0b52718e06db50ed1a023d61a0a09f195b39ee672bde1952a3529d32356cd5716a47bbf2ad07d39d92ce5f34427e3d632cb7150c8159ccd9080bf8ef5b6d14aec25abf7c1a46aae8de7383bdaa189709ca0a484f7c5721cabe8194cc2a8bc961d0372f204ea1204697ab25831191666b5f6edf8c1f2d2af328750e85ef5733fc01dd56307f33a36850480f0224b8f98a950fc5993c1431220de9c260516f6cf0922e64e578c835f4035bae281f68a2bb5edee58a1dc5b694ce8a7ea0dcab6272c7a1783fa1d9c549b3418e6d0a862a01a32526a235d0bf4fb976da8e26f138accebbfe6917f4b5f260de1462418663f8da0a1ab7d5067ce2b6e9e64242449ad688764f6ad66626b0818569bdcadb3919bfca6e41c9b89fde288819b0f94e7b0ff7d873e678dec8f4e375bad55633f2203305f47121fc65b182fb1951e796027131cd85578f8a612c567ba29c7473f3fa5cf9d9bb6fcc1b93c57910708dcee1b91524b86973ecaba8eedc68e6421ae9cdb3fd922cfae63bcbc4041432c61ccb26967a17738258a76dc3098f67dc592fb841b6d4756fc1519ab75f18703beb63811ab1795fa421d53e6cc8b1b6e35de8ef869f56bd52f77fa639ac49e5fd6a27b6c24854979c5da2646f6585c7e01abab63046d24eb11e5979cda4d9a46938a6484e3be379f88709674069cc0770f06fda4ba176f25ea6c6b110e8914cd2b1307aa17aa50c37b04168e6aaebf9ec9d15e4220be1fe0e27b4916393f0087d77a6315e86e212e7899b21d84cf2f61706c96d70dbbb7f40317ee74141ba0824e94235e0ea2f79d924cf450e32122d0a8dafaca18cac01cf3bd4cc9def69e3aa1539cd1116dbbee256bc03b5d94e32d3fe584f01efb527e7f1e93e055151d41267a2c0495bb9ebde55a401e502e3de415966415eee272415f49218df74eb7e97f3fbcdaecd7b2ac7967453bb1844f7a2a6b24de6f6c437d59018361dd998b0683f61950517209d9701b606918200290c5dd0e6ebfe34838cb69915df5284e7d5f73f96d3ffd6721c79d930522a0569028dbe8cd7ab645909622f5b6ed7daf035235a1262d45a0c415aaf2f7fb431ecb6f9b439fe332532bca87b5f0f4dddaf5df66d40128f8624b32bcc8f03cf94c77058ae5740e2c20522d9592ec0385054de197c5e98c57284fa730f137dd126895e84ef845991ac70f5538b60c79bc702a5ffda31e3029a2fb7f19adeab9b3776aba4e12232a692156ecdab7bfb7ef31c508279de001ce84446d61dcb0535309ee383dc8b0bf59a43e15a267519d099ccaf11c7c4cf004badfab6a220e3a44ca16c1f937c3ed7e6b52f3bef6673a3a559e72f859b476f75b4221614214d671487293b91cf5c3737c6a9142209c2ad6d1628fa9a6ba9d20b96f77409f42fa808ced4e7b1784a07472dfd0cb52361798ce4684925038ce8eccc231092f0309ec29a3ba30366724ee3aecdc333d69a1e131b8994a99ca5758133bfc50aec53455289cd33027ab050ed5735512dbb820fad28030476454f114a520000c33cac2d1d445fc541a9716bffb27a48923ba7af7b07676d58acfa65a5be32bc8f5265056f1dae96820938502be1adb86af586ce5374d2efc9233392056c3701df355cb3b43dba1b9e938a8819bbe6d18061b7ef4d100d5726a3aa72569ad3289edd4a067753bb5fd179d9b0fd5a2180cda4262960ff99725388c91cc1a7506fd9f306fbdcd10735931f91b993590769de9446e1afb556ad2229ef2efa220562f2f6e34b2cf72e0d10f08d46ac9b3fa06f74f995c88e12f8f49b59134f582aa5c0b7e40346b9159b64c126dff5d0aa17e1e5c8cc874d0f6765e2fdf7d72cd9bce5552d08bca6282fe7fb41c57e2548dfc6c76cefbd5a48eafdb70d77ac9fb34f572ff2a50c82bb947c1d3e1775256ce9e3ea0b6b58b1c4fb93b9fcc4d6877d289420a3ffd8ccb1f073103fe29fd7bc4a72651ee3eab058774c01b70d4ebee8bd82fecdd8cea52746e3071132d6c6986dd00ea118cdfc542ef0810c529f60331c46c005c50684e60a43c657bdb1944b67fa72ab9ce95be5fb45390628ce1e3629590e7c560ee3dd6922f95b507b022e2e9f8397e43d9273763e7426d79ac0505517e134b12c6dbeec2d936b76bf695794ab271934f54080e755af133ce2ba01daeceae6ae322f64e7dfb5ea1e293f66f2a3b131875c0b8d25d4e86a043b964ccb56115b64f91d3b1f778ece984a8bb472a02ac9b00158aa5408aeec48d4234b35320261a838de7823e400fb7db0521f49b31591fe44a5f29c51500675640fe42100771148f5a62cd5a923f1865177b5b0dcbbed4c8359341f268fe9d789f790aa0ef5a940f01632b0adf59e68840a0fead553f75eabef082952f51d6a5d370b928fab27e2e91ccd20311f5cd81f3911d4c6a3f006f9f3e30ef552c05474539e281911485af1b391e2a9c5eb1c0a9c792070c3c70ad344810ad9bb722b15695f5035d9b11718dd4bf49b7c11f3efc45b797178e266a81324915594dff2a7d212ce5ea43d107d042f907c9f413e677f57c68157c0c04157369392eb5dbf8222e41a8a1cf6ed5fbb125bb2f1b6b82efff02299523a5cd8a51e589e6c6614b4b26df695be1de99a5353e21f4771f2ade39352cc8d0d963c15c0630923ebcbb4f32c27ea32e7ba4a85b5f9bc52c651b81e162a9cdea834440cb8925529585289bdf1bf0dfe1d44afc899e15351b50f491ce12617bae3e5156352f275cc3c8613669299566d58c88fccf53783a22975cd7935c62e5a401218fc4acb705aed46358c95de45c09f4092216ebc36ec4fb5db987b3fbac534ee455e62d85df1b075db7426c77e0483d1ba4f1f16616a6ef9d7aacd6af1f49be44e16dfda7ea05850444754036026f2dadd3ddd4b7e948109e8c62ad0b00fc1fad05f147afd6e26217369080c4e802a7da82125ae5ff3bb56f3a5526193b659bd49784f927fa03a4c0d54dcb7dd8e09e9698d64bcb1fcb943a3fed4bb7edaaa530838e574bb689f485af4aaa634224956bfb4feb10a121338500863d356e37d1d7b9699890ca87cc94e7d1c43d9e40bb62c05d86d1208a3fc4da9635faabe230c23f62578f703676179666aa225e4bebeca362d88e59e2d729ec0bb635db32fb71b9ebd79344d849e5c5130520ff5b08f553cd8b998a80d31e1d412c23905d64ff78e3ba56a0685decfb173abc8a9aca0bba59138aa267531349ccd146f7457f585cbb8f19e731bbd0f5cfc90d4eb7d81b6723a090ae84206bcbf4ac31955e6510bbe0444fc10c16571eebee62d206f07f5b995df3ae59500c06810eabe2338c35650c009c6449a705672a2f2b542fe1f0348ab4d0d4f1293f0e9caca52e261142422a5912fdcbf7c18ab334b708577765704c7da2da68b53bffe4c4151a5b56607152d6b0c0e66b6fecff3be755644c227562270b1d05e8f182043446fe335e4143e0a3d97b675787c8519f1b051398aa9b7c58bfe008b34fa373c090535e12567483c16f82708972160beb83b84ad3fcf069380fb60b5829d5ebcf874ca1c42b440474a555deac8c753344d77495f284f865283df09077349f942ce1de51553f7bcf77269d1b2def9a63a1c3eb8f79871c44a8c1fa2726c387e933d44552136631edf0a504897e42dfa3ab850bcaf1fea78fe164b8a7a8b23ae8b452435808858fd68de8b5cf5f5bc029e97e8ebbef12808e8b8d1293f1ecf08878cd1208d1a2dc973e0b422cd045fa77af12ae4a2c69487da674bffaeb42b376471323e6150620d8ec07ba19a99f15f7c17adc83863b4183dfa42c31e3a79cfc67801d7041e71bad6aa2a7cbdeaa7f8f832f954d93d549c4c00769a093c533438dfa87cb43d4a35f017d82febf2c2815c5245f61adc8e1ec379eff292542b94820a783d77b031bfab90c685f62d624179635cc3f79f939f309f3fe18abafac24ace7239bfe5b62ca641035205f9aacc878d19fa520e8e094fbc0a1366d1d5a1f5b2c3a352bc2b5ed4124cff769cf414b142e016e94e4faf1c4ff157e7383d42fd2ad2a8dc18140eef00462f8a781b93afe01ba11fba0a51e1946f30274e6542a725a9c568ecc0b7d6e370db390b5be6ff8767858689bba1bb450781e55a3c8ea60e22853813a0d13d16631634dc58252d225fe76332f507894995f7d5f69aabda1e0126b10a4c8721e62482eef24326dd0bbf1774c3ef369141f33ead5b6b2a47af68bc4af1b570210fc6aca82a184ea3df58dd4eefb2d05cf920f122d34dde882a56116620433aa579db7ab64421146bcaddfa7ce7a85d49f6d4ed812360edc5a1ed0f4aaf8594756d20f3e84e9751ac6efd37cafb1259b85cc4ce8744193b80297b9303102550e3b0616e5622c691ac056bd5b0303f749fda3c2fe433751dcc43e6adbad2cd7dfdef6af6340e16be9fe9e0a245c303c711de6fc1f7476e4b25cb367df60fc668b82af7dac534f2113a2c0d979d948bc8ea10aae176e10444e1c34cd556be5c354d8aea6ab380bf2437cb03172cac17f7fca1fea0e4c7c565a55d1c0b2b8bb52dd9aaa48d64608ce767d49c37fd39511250fd0e51b68f8ee4ef7e73bfb66342236a28d176238350946920523847f746dee7d1b8f7fce12c01b51d3b589de20eb4f2d1898150c1ec2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-13</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-13/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-13/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="280c0590cb1fe58b6c7bc830964ab3a7e9328e418b8a9868eeb9ebb989ea7317">281243a4c852def009ab246a1c5a8bfd9b90af03518a1484ba78c11455334d900a4f7c78ef36239d1631ecc219641252319163438cd11c2890569111b153ac60a3f6a696e121361762dc3c394907bc0df53f05d66f920a61b7d9c3ea375eddfc5289c01e9ab816e24f80ec2b1365e01fdd0b909e0847820f9327cdcbf77e5d2699562ef2f035c22de5c2b7a447cb3a00d8c40daa7b3bd86ca8c91001b72e667918348c6718e648f067c45c59c24936a134bd89a171c39573d9a09999477c6bc235cfee975b81e6607c6607fab3725e236d5e3c0018e255acccf1c029a8f16e101c3dba308bc7c7ef483e400e867296be5ec9f18adfaed3623cd4084e17dbc57641e63248e01d666f0937425354cbd5e35b47602e2c5bdf840d33704adaa415d055a7cb8cc777842cbcf1d79a5915f148dbbaae4cfc9a7c50f23d207c8ccaea0d2371593afc68d9065379e275204d14c297ad178e70635116c511a20ef213179e2b0f2bd2091269ec7c28a65f2a165c862d246de04f3b5302fea2eba4dd7bfd9ae1031a162563e071df62fcd96db09d84143192d2074c156c4d1b8a6929c870e1f8e71dab764796fcb5f51e695770cbb48638d27c999592833e181cab3ecd09159bb392706d9ce8a8e580077383369c5c5ae5e6a4f66c54a0692dfb7b9a24aadbcb45fa20042a90f1b7d13417ce51be323b0d4a5935e46731a80bb991d1f76a89d36427c8b1b22ec86c36a6ad45d4a6d12529afbe21b1b0067037c011089dc30df89cea2d980000fa581510593cc2aec3dadb92b03a0735e1c46704c4a631b33078720274a8d8e403bb7e21118e23219b2e7392cb531f067c9af0755f548980375f17c744a4f55e954e9fd0ae3e7b0d4881901dd5076dcc104341befdfeb021befbf0bce97a408c14c7ed3724dcf4d2773ef12b4e63b5f2d6ac259018779c9b59d4f4e0074ff26ca9548bc82adccb2493896d313baa27c2a3f1a73b081fa83297610e500f1c1b28f553539ed1c9e31b538ac228bdcd765f8796089b2130f6572746ad3693fb1abaac2e8d79fbc2df6609a89cc5b242b7f0ca7d2f645fe6b7cc310fbc295ca5cbe173beb73b6c278f99e26c9e7ad873981368a05a0e76b8e6745bfcb040ec0449fe996e80f2ff81bf8bd184ab4bbc6bfafe2a6b5203f3934545f0740ce36d45f770327858f271cb348d2b3e606e467ab744179d5902976abb303c9f92e575ba5ab9de93fd32d264bd351850d2fc59740299bf3ab5b251d951c1a15d654e206b8cfc1cbad1d8eec73c1d7658a2937bec634df173e7894930160309c41a54f9868e070b73ebd3ea72fe4599d65bee5d74ae22a6bdbee38c4fbd8063b00ecb0e84da5667a64c735bdfc21ac6b05e5d67885688a2cb56a025404f4697eb863201ab449c30cc8ab15ee56275341cb9045f88974a6296aa416c78d47ea5a47b002aadd767c36a552085881462042a24ec56d87fd73762b7b055a6417dccfb0d1545c3dad77fac60e383f0df1ca934a048431193eea505577649d56703f22ecaf214eca1b5a7e26adc3a1658930b4584b3bf0181f9b8186fdaa42eb2a4df8f084ccee31a1bed371c60754d6fe1fb91b7b9aa0f743a766b88b9f27945db1090cce7c21ce0810c89d39a4d297bc2afedc839d8298001aef0ac3dc7ce529bd7ccc5cad8d00ca2d704607efde0a4f8a9758d81816b08ac64dc4a2655b755c86f2b1930b5f1d923c3fffe007f4ae044537c54fef864a742292ee38ccd0face2ad99f90d6a99b75c21cc2bbee0670fc9ac34e65102e260460373f14528a33f12dc90222877e4c6c47e25674802c3e836cd3f3a1da68d09b5fa2cf692dd8a5c814fb168e6a2c5aaa354ca4fecd59d7de514dcd15b3c8e76d3dd8363681af7cd584529b9463fca1acac73533dacfeb9ea27abe199f75b36da838eb43537ab3e8d730e633dd3d69e24f13c05156d2071cd03a0b6ce3636a74bb2d349636faed3b8406008ff9ccc11c139c44fe13ddd4f1e44bf2634ae7a221debec2bff57975046404d61c74e5274675cf70b316f86231f6a4fbc49c2740160e090e139f3914af1c649c213a58f9e078596c687ca68ff56fba38da7c4a0c77d47c64434b3e1094efddf8de50f5ed471c9c27558ed779f5356986ad7de9f0a176e7f54e3257a3b51237395dbc2c1300ff8ea6758c7007b9370b7f16618ad08998375dc3c787f5d071702f1904d94343444ebafb6b5c82c005d1541212405df511368e0fbc6d7a54b7536c330ff4d1f7f3e954736a9bbf7d3c19ccb2ae9e685c6abe76f0adebe2280aa08047c33df02f90c07aba14235bd05236b2d7f2284faf18fb8ed54a75666d9a184734d6a41a93d1acc67a7796730a11eb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-6</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-6/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-6/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="0558eaaf73b62e0b321f94c54ae033d93f6e4875f73586b0f8f1d917b636f08b">281243a4c852def009ab246a1c5a8bfd6b6d342d08a5cdefe32c50de63f9508c3d20e8d5e52d12a873d47374587f6624c2a6b824765d63f2fdea03e4d6dc60d0a525723cb2719c3f79967d696750dac5d0d94754ccecc1135bb3987ac66fc083269ce77e52d25eda63769179d341cb559c46e5ce158eca1b4f0636e276115634a0a878db80809a5a09c2722d784e093380d478ddf9f046c669016e568cb70bfc27fd911c3b9064deb0fdea696795411535a021c98e6d4c71ddd3f56245beb75fe5866edb49ddca43ac7adf2707b723c5907c550e391f12b71c19768e9f9ece3f3133f791e4d0768f7fa76a5f4cb8be855075beb082732d12a9262900d473f26c00a24a78e488babaf28afb3ae6c2872fddd4094da78a7399c289d68c739e005664171daf1cca94766c4d633791fd83865962db9573e3bf3a3fdf0770626c6a5f31dc8acd75b9271a9dd3d8448552a8a3210f6a85e88865f0becac830ce1447e990889097e63412887641556c35f8a6b1304651d5edc7a186250f0c6132c88864e1a11c9d93bda38d955f80b0e946074c33a23a6c85af30fd21391c20f16ff6a75b08e94626bfd96a9823191039d7f05692e149c9597808f0b3e9487dda51c98d1e869cf5e655b658c2e7e928f91a412046fd30a41d1f5e6507c5755b4a255cb58d6d00d1b1172db211e6728cb5e7f9d597ae6c58ad36ca5ed7bfe8a79b1025f93a631ebbbfab2bea99695930b30fc7d535e78aa660d9d7f64845278bc3d43b98a9406c8b526a35916c0604d954de89773a5fac09ffc541179594f0d26d9071cd9ccee1ef2170cdba8e3977a92774d5de4995a3528ca9f2fa693b7c96d97a356027b4897493b4101e1683154441d2d15d1ea70c2bdfac03cccb38b936eb6cc5cc24a6c4cc45d626b40febdaae901b539dd3edeb9e60607f030026608a2c6ca0df23912954b3f4ae314f1950b10e6d54de2350c7d8bba21cd6e98d35fe664f6678eded0cb4f238c7ae5fa9bd33544cb3681293fd09e7a63823828ac02befaacdaa019551d06b91b552216799a2b8074349b3ac1fbc03200d283617c30ba8d36c144eb9c28c95418a973e1ea4b9c80b24a43ccc42afad486de3827e4668a3485d09ef01c79b1a3e0f93532ebd54442a67e35bc865306a34857f97b3cb3fe2d6ff074e0135076caafa81f9a802532526688ae930386a43a3e5528c3b4d8082f8048be049d6416952b738af3a133123d5c1ff073c66c0414a2116f568e7e7ad445a23becf6e2eb9be28190cb728cf8aa713119dba6a8ad8a2454baa23404156e47f45dab8bcd627cd4d19c160e4a06d19f9279f96d03e8004f45804e2ae85e8a03f2a1dcdb3b32382098d296df7c6e50203ef1852c7b89e76b0824df3782438a35908d3508cbd2b3834b7c337fe2777e9dd2eb5ba7111a0797daa8ccee9eb7498fec06e134997836a8ee7858cc65ffe217b19c5930b7e018aae2332a4a2797e77b07b33bce8c4f02b1d8ce5711a9d25aa5b7ab17b62bc66d7a1261c3dae1bd8f0cd3f32c97c06b12f0cf9ddfa8962027b8729e544619e5ef8f7204c6ef6371b2d63e08763f2b2551c6b8059649a1452d294767cfe42f21a5393744dce987756bc9e7abbac20203ddbd6e3da7fa92b4f9815024c84b5806a1117fb095057879d5bc444</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-7</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-7/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-7/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="2dc60127b954b9a991a69e34530fc7031c13add733c1aff1ae91605c8531971f">281243a4c852def009ab246a1c5a8bfde65090ef35a49963b0836c94a46fec31e4f0da5625190f8aedbacb648cc2e65ab2a010b458d4102adba9261155215a8134df4bf88ab7c838585617c3d2c59c197da0c737f24b44d068d13a6955bb2d47f3b81ec6c339f35481a029357dfcea8364edd318ca6794d1bb7449994d20006efa6a3ee10c5a583a7d3acda2d761f21dc77c303456a4b609cdd14a4d9214764369a32e6d2f70979ddaf142cdffde9b5a6498657b4e6607e3ee7bff8c307e495585eb4896b9a315b52046158bb60af899ccbe4da7e3ee858a81d1d255957b8e64f4de82e27287c65bf972c7ce252f2a8b9e8aba17733bcf794836019011f45630585a1f5df69e31dce5dc867f4039456bdb4a4151f8187bb26ef844768e8d87acdb6f68d19a09afadea631161a9e799bfd1b9a4ea74e45fa309f9eed9378de7d0a609e99ecbd80d4fb4f8610cc7b7bd18379ee1f474032dd7970d9b8f60ad5893889416a6e9358d473965688e76b6e18205727938ef773d00b4a14226b0011e6e3b83e4a42abcff049de98ab96dec9c3c8dd2001b3f037340f4dc81b31d55372d1c565a188baee3803969a19df0aa61e763adf19f23b41e963e9393f792e3c91ea9b4ef3b8f43bf516e7bd2e8dc2f120804e3b08158d54afe16156e857bbef799784cae7329803d2849c17cc471885dda6edd8e7aaf7fc3ad75087b2b1d9076acb410263d1ce20aa375c29df977910195a71e232831d15c3ecf8b1318b04e6043157f51a269fa25e5f4f0543cfb1538d2b2e9f0e94f9967fe7e5a51546adad625152a290e042a1fa6e6c5f83bfc86c4b761889dee0eb365f6c25457c7c6931426e57b39af77cad2c4294ee25f61c89aec171471e7b095eaf650b619a55d04004a69747026fdffd577e59b5b059bed403f57bfbcd0827a869e6b66079db4aec3696f98083e63ec27e1133edb003a7a687a02ab1611aa18804b241088c3bfba0e8feeb049420b7c9f61335ffaa4ea4e51c356b919f7518417c9e04bceb5076991a9c5078cbc773cbe883c448c32779c35462e515389956217e9169a5fea5d910292e98cded5750198c5e5d7b97deaac4b9c77462d32686abb7560ad419367e537deac7fa21a91ac442bfd2e96c2bac043ff9b968697c5cda75c0da2a9213a8b3dffc8b2b8542e7174470768c05f0be52697f1cbc536a48c27d575cbbfb655ddd44790f9cf56d6febe1a71af9e6c664782984cc03d56cdceb4c1c2734c1228f279bb32a2948a6be8394f29bed3e20475538f3732f44ca1407d499db34a96e7250b59d80bb49c082829345c7fd4541dff04c0f3abe71cad44768c5f72e1a5d8db9fe7a41ab6d5eb31fabaab26652e91899467e0645868ad140f2b4172506e13f1f36f275de1f1bae89440f8ab54602fb5f293787966d73abebe957762eaa0e4c5cb14bb553c082db40d68f25e2b9f24cbf33a18199c9bf2223e7814f1ec2cb3680259635de2926e433d15ea4621fb957f1aa4c03bac8bb7a0e2370d497857df2f8b00a8c36970f97e44193083499f524fda55e3468ccf7ffec23a8afb204738013d8e910092e54fe2466700aa1b1bbba28b447909df2a39eaac2ed8ba07587ce2a6958dde24ca01b973bb3ed7143bbae48efdd32471f4b97516dbab25eb97891b179dd494443a4d93929ad7ae0e9bba980582a14f173211a091a0d960d2f5ce337c810e889f6f6e925e804ec1737025e8588a783a7653f17237b6b5da9de32a268e9bc121f04935e6971103ded99acf9d57fd01aea6a39f875a835103e022735bbb1e380130cbc4685a26aff384833d00d46a719dd7151e3d65245ffb5517c6570554f0bb60fc51df8a0679d1bc72d2eeb14e00cfc33cb43dd1dfa679fec83ffb7625431780b246965d01a942d0db5fc3f3d7fe979e915f1bb08f2240df41f6f3f353f27e7b17775b929a37022fdba272d2beb9b5df04e24f37d22a391c4dcd99978f6a99f6585e5074028b051f15cc0951a714866615e694ca7f68682600e057a9a3635a4ffa369690a7f56bbcf2be3bcfb84aedd5878a6ae447a83b9c7ea616f93f53e7724e6042a0c46c510e754ee7050c1906eddb5b1a82cd214949fea1da94dc89bd6d1825e2ee97be9d54d4bc1b826a06b660e0af1b906f3ab1e6798fd79aa6902ec8a07e8a43209bb5b27d6e4641851f0c6c746f5679607ba4c3502e68a541dbf605f57490d9cb5bf96c15984130dc8b6a95f7b6d72ba75670191fc785867f6ca06a30f0565d2e490214d72f01afd332e3f7ada17fbc05eeafc15db39f6eca53bd10d08c87790e2accd6a134ca8bb84ddbc210116f868a2f3ffba366d842b4e050cb332e619466a680821d26797c11e60e91f15d052d76f3b2baee59843fd4351f82d551cc651d94f2be5e3d00281b83483dcc02d08605ee168aa0499294a87222d32fa42e9b274f5ccbefc892a73977a73661dbcad1484c953f7a0d799808cdb4026b6dcf25a97e9253d7c855f806d9a5a23b482dd19e233899f78531cb6e8eb9a5c9d77e171b0444c5e0db114711b6cd0658ca629e5c723d2d0e2ab7167206daf20bc574957b6fa30721ffe710b599b6db195fc634839f24846631d5b89c341c169117b96cf0fbaab16d87e1daf415912d5efa30d9991de417238ee26b52382005b8404fbfafd493e0ef2b047843075d24f415c41f88021f8bd163046eaf726b936a0f55b49cb1303187c4a6e55d15b85480905c4f4659ff00e8e58f5d89a0aca62b826882c58afd132977a6e8b8d150983fe66f45741dce8bdfa260febaef02286d49fe25f0a10bab027aff4be01774dcd02f02ce61bca6ad7c85f64c670a9856e66ff356656edb2a00496e5f49954876091d763d59db91d83254ec5d2ecfd9298fd4b7548f318718d0852813d74f906f72c118bff991d6b29c2a2d0bfd69e1b5026bca56f24aeacc9eaf70f37927522008164804e4b972f9e367dee2be986d56ae6ff57cdd67a9f28cfb45aa592eab9aa2322839aca8e3a69920507b7ab14b8a6a4c8ce92c5b9a189d1973a89a5780e32e0e9638b81f619fc583a713a786c16f4a5cac983ee47ea105dcef81e484fe53875360f6563f7d83d95ea1a40340b5344202c2e9b9e33e389e0892350bb4f277568eb1a1310fc01e034fd72e5f8e5f5090397734e8817f76a5d6710a6bcac5156d907437bab526b87e57e2026c3c20d4127d6a5898d52c77cd7176cb1d86ca0f9eabcdd18f353f7ff586afb3c2b6ed926e1bd9b8e6f2655ffaf745d9846eda15bd78aa13ddb73f8fbfd15f06ade521a044934a7e19b3d012439f693447d85a5478a20f66837bd90d02994fcf1845c21269d1e0bb5eb94f60fadab5736de076d54d6ecf12d7a3321c546e047b859fd7906ed10871b0e812cec78f769de5c2661b9bc67fe11b5e8784b72a7c985b7d51015fca1585412aa791f921e20fb0ee1d362c978209fa95837579e178edbda5af452eff6aaf6a6603d8cfa76b475ea25d5752e9ed20b2cb41eb898f9689c503e6b442a65edc1ebfa7ae59da6e0de8546257bab45a7db8064c9c8c00aa4974f60b30fd4a7f9dbd379d2dacae2c3d556b63c614ac708d66ddd8b0f8b0fd0e59964068070bd14396a2d31c81d2092664d9d9a28dc8aa90cf439239dbaddbe295f129b093decc005a1b6a83f9e168f8daf11eacfcc0e4a61546162e3a9d334dd414eeb46bbc739a0737cdc525073cbb4b2c02a16e287d1a5b052c629a259ba522fce58cfdb409c2c512e2655c8a93a619</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-5</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-5/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-5/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="03781b00560db1f4813b78f23f5056a4bfdedcd785bf54b4291083648e84da7e">281243a4c852def009ab246a1c5a8bfd2daef18fc39d629064c53b6a7e9b57d1b9d48a2c1e410f1edba5cc6f6df3d864fb97d2c94970a5ccd90e9d8c7d44282eb9ffd65d23ae2f5ffc15899508203fdd102b25f0a1bb71cd2d97abd6b83c975517235d63d2e35835b4e62ab034ca55bdf191bae35786f4216ad775066e915876cb420a183c508e994ed0d9c54a11e9f60e95fb21a26a6558b85c9f3c64c576bdb85c2fc7ec79e218d7f019876caae93d925e967796fd95b47501258f2bf605719044478b0fdbb363f2d84e1a259ca36f4d57f84cdcbb991be8f92aabc1bf40e8e7d246e16adb26be2fd8d22a1209512eac278b8caf92723ab50ad2eadbc99bf8e948d369a5f1732fab0e2d503724789b9fcd76d449c27f7405d4d92e96af47f6d19dbba83c06f3322199721b29a3a314297872a4dd3f8ecf42a6d126fa7db2af8112a68a90ec7de8dfd8b26358c30704878acd052f1b92ce31a8d85cf281cf43d6c3c4ec580835ec9dba46bea520194b7db0fcb6a94b4ec34f6b41ab36a515f692ee61ab8e35ec711aae933df61055faca5bbf2133456a13ae41d063d48b88b84f96ae54e9879b550ce471567f7f66c6d2c4846ea7bd5d8381fbb27ae73c0c1bd783e0363a44f34a6e67d7b96ae8f0acfd576c5947aa10a6d2ea84958b4816d868c805edc3ac5029d3c3b56b64fd0dcfc33493d69f8614a39a1892bd42fa1b33969041d49989f29bb6f63f70974e74c45665af1fbc845b65d875aa2874eff3b395806c30cb0079862d40bb8921af40ecf75c03fd1edcc4185e4a991eb244e8893104759a9f250ac5a211326ffee46bcb9eb323ebaaa71d970539a605375417074f9e40a5de9d65ec51a6f4d7f14faefb3b59191a84ad107675d80d54eac29cffb03d32f16c6f251e9b93372e285098c5d84235f69f0fe6283755a1958abc185b9dce4ed09225f3f4abf7c8ccca10a969d52cac4601141a62493aa37a20ed10a8c7067aceee6cb78559fef5014e0d6da15739075735595e7b17985458a0f6a57f22666d7eeba6ec5c3a4ca10b3df2b2447719aa76d131ad45b1034df2c5291c2df253e4bb094052bb19ba815698ac4fc8b40c527cf245edee49f97425583a4954516fb5cf9a7eea8f810556fd1d7b68d83a8db1f06bc603b8e33e589afaa7ae96102b5edf6b29cbf16d87647de82c3cf129fa331c65285aa8b72ab408773d7027b630f2c325f5f91e6f4bd89c9aa8e2405a1019e240bddf68e1fd4d4c65c3bf951f71f289638dd155326a383dd6df94c27a0a10bf9593bb911881624f952b04036155a66305e604a1f9788d5ef28d11f95d7c1421d6234c4cd29a2214aec0bc2929d303695f34bf62bc8d6c6d06f5b04b7c563c50ae5c008e5fca70d5977b9822180ad4e92762fc2c8caf7b4f0371dd27ca74cf4a5cb3c0d5028b65cd83c83ffd18668952397ba60722cf579153d93205fce0543187e3600e5673ffcc9a03fee3577fb5869b61568b22dbc275d80b11e1cf4a3b3f93b887cdb4d61ed9fabcf95d335ea6b5881363626f9fe9b17fba4166d6d738ac755de07446f1dd51885fe7c67f964256fb0d6d676111b29b3154ac5ee0f6bb438633faa662c107aa84f53850aaa50299abd38afe2778672d873f02367d0e1b83f37b9f6d69eb444e34c2b036247d89d99f2c227d76e221742935d0de1b5a0d4ee81dc23e412150c3fdd493a3e40de84f47f8a4ea988bcc2fd7c610234b158b9fd916cab7d47fb597a5b7a76dbfc46b08383c2f77750cbf570dcef8341e79d9e54df0d00765bab70487878a649a8fc6457ada7fa897f48cd04abd2f68a4d7ab9c28cea4b7d7e6559518f43d9a4ed1ae9fccd94a9d98b4dff5c62c2eb99464597697c37c5705370fab71ce15421ea88dce5019d79c90e1503287ab3b7c730a495ee4bb9c3ce571d8ef06168d18f0bf850029e741b3af14d5c29c6c1b2ad4586af20d50dce99c21d7338ff026e72672b7a8829b24c2b2dd86ced13763cf67b88df87d189451f33af74e65dbc74a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-4</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-4/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-4/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="3a9ed4836d0b9193eeb0afa07fea941c4e6bd981ad312203ab789887f2501261">281243a4c852def009ab246a1c5a8bfd51c7c6c77166c99653545a1bd804051c77c33fdb4ee7b4e4371b965092c8c9151247d6a72f14938792a20ed0b983cdb658152cce16445818976a6af64bc4d78b2592fef9c41d8e38fb6002f338c30cb2299d0cfae548648e427b219acc5d899afe3aeb9eca0260553daf44cc4fbb8ae902e46c774603b939f63a7d507605d46c8a0c8904a3e94125512237d3c3588a3cc9a75bdf91dba7610d40ea0b2f04e007fdc770effa83b96ef52de936faefcdb5f10294f8234472ad57277643ca535aaa21daedb912fa349c53123b892e198ca4e6fdf6283e01d3d381f4061c61ae580c42034bcc54e577e122cfc27076455c948dc85737d7a3c3bed5ccfd8711b1892d01968691bfd73135aadd12b075d068a5d494a2275771f63485c4c566eabeb6c8fd4aa76ee2f5ace2243bbeefbd8811cf8cc897267d6e3a80aea8f030a032642c41635e7fd00741e57107924b0c8f3299793f6551163879460e5a217cb6dadfa24461a5bfe4e412a51d661e924639d37405b097c50659d7eac7e10a5ee4e297096a68eb53224780905dd27d5f94faa83a65bc041f8401207394e596daffa87f4eb9d31834206437db2f81563c7a820a1c12e3af0c9311ca4982e7fd02d5e23685e667926912222df129f84c79d9d275decbefee4ba986fcbb29be5ca89e6377bc792bdb8855e77bec7963e5bf51b2ff65661c896aa1e22d9e9973249b7aea45124b70ce06c7e0e9b04c4cdbd151cad9ca963af7aec64ad5c456fb9fb95a420caaf30c423526665b9862135dad58735174e4017ebee7147df0f6e2e3af1060cdbef1f2b328dee1fac3afb51972fae668d9e9d9c08284d021f8152988b83488101d61be601328b4414663a2b7bfad50229b4415c065a6297dd0ec443c625c86a68030a19e53661ad1bdf0fadd092fb3440aafd17a334cb0afbe48eee4d82f4312acda482feccf796569d84e3e6e743a5d2a6de523fe58581e1c6fafc39189c6d3c78e40a534a5e28deab95631d05735d24186d609db00aeb0b74fe686c64ae4401d6d60de31b3b796dff3cbd0971ac8a8133dd67d4b17377e75246d700336e102557c9b9b881694e54ff6cde91095bb30a9a215484714b2ed9ae5c66aad52fb25ec8f7c10767632e34dddffa9166d92b813e32e522aed7983b96767086d2c5b85fda8222cccfaeaba2cf44cae516033022cb58186ca77c6b462de21b523ad30ca08e3c1ac900778e2df72474e3cf60e24076559ed9b29ec969e6d49a68bd6b1380c97242ff98dbebdcdfa5f02389cb6f4fa2c44a5f9573d719eafd861bec6bfecfd63c0953150991fb7f08ae1ffc1f3ee5725993d624342668aa9a9e23df900dcb3cba4b154305b6ce74a4aa3e110d0188c41ac479704efb44d1fb996c685dc6e4985aa9027fcc79c9f140e2a2455d06b9f28d9f275723768ba71e533342a151bf130107feaf9fc0b9f0c8235bf04144ea2ce161416c0dbfa89b15e678430d31b3c706fe32c355f603805306031aeea7512b4f3bd3197d47a368047a76cfd54fb7972242cbb683e4f6f400909ef0b2f87fbbda7ee73fe7e960adfe543152c3bca185035718aa85492f7dbcd3e3f6f31d8a5ebc7325dafd7c6b8b9658fb83ea9e29403abd65e69576fbbc060001f1ad63885505b9b21d358d310ce25c5c6519765c4ba3cd6dba46332ec206c8007d497944c24eb1569a6f3cc598212804cf67c0307feb4ad00e44d7b9de6aed0992290a16d42e24fb4ccf6b8e31044d5c88497118e6d69cb18a93910aa7986f3d3e9160bec891f0f0b79ce311efacb63f16479f5630aef6e4b47a16c8db2c1e28ff35c24e8a64dc6164e5cb2dc89317ef198b563c65bc641bd4177757cb2468c0ab02f9c6e4e1128a19ef7a2798084daf01c79f5b83358bd4e01f83da3f82a0e8fef99348537f83a42a0021405b2708f3f840672eea04a0dc2539a129899a67f3322f1fb543935191e50c4f7a37b3e8c67734b4691920eb9776f6c3871c57b58f94e67fa58cef9d88cefe5cb4d5b36f6f6a925af5abe4dcae975ccb08535cbab445d2874fb6bbbe58d4b2fa343b41c8bff328627c823c19b7fa37576cc157a6d0a9c1cff392f61c6615ac64abc1b94c29bb6426545dac8af0d4477ab21fd5b52ca67042c54834fd4fb3df047be66ac75a63cd980c6a0edb8524a831611a90a5bb207a12f2a83c006525a45c66f02d7a6932b83e37c80faeb9508ba03195e4ee501f94c462b743361af5a7492174c68510cf20529b1a0f3918aad875bbacef643582d5ca2a61afb6df4b937033ac60cc7cc3729da11c07ba56fd7ed86552070e70e2dfac13d1e8fb235a0a0aed706356cab3ea7cfcafa6a7682df6534a16b67dd0a6c2262388bc3f6b0f7399cd7e18362b8aabf0a0864c1517cc7ef3f259ff5a6120d1fb6391fcba269cd970e0a8b8b1170b034f96b28d16b50f5df67055fa6f9da1c3a331f4a0ad1f04705033a09917a3294eae8a1d1b464981009d2a55c610a3a194e53397525f56f4c4c2e696f2644e4f7e7061c1b6b0d3eb5d25bb49b7116a950a6fb3991c8ac1beb2940f6c93787770f949d7eaa745a46c955f60e581b9f8820d9eb95274c5ab902a47f64a80cc2b66ea39075c491b2f501bd58350813452a6ab18ea40557ada2bd9e93ca720636474ec33019a2d49405f5badad918ba2f37b7438df219ce9e9a5a457b12ef78c1e2205cbc0c4d349a70cbf4d1287d77ff97432ed3a94fe5c57bf925907e123da86a60aa73dbe1fe23fbc1fcd24db5adb7724aea7c5c977929065d82fbe3b4edaca7368b010663466be722129eb0a667056fc4e717c0150a76e787ceff2d94d5472d1d5d9a6c11130280f33294aa867e8b274023a59b1562dda1b0a581a36f037180fc9f5eb024b965b548df488ba017e466508ef412f9fd260fe6ccec3f5f4299a7e776a94b6b75a12b91b6ae106ede4bb497d303aaa8b38fd278358ad47f4e6eaa444135f4821ffe22606aa3d2b9d0eadaf7a53edf08aa33522578427cf0bd16cde24c9ec108e132b31476680d58da8f695f58c30e651875e1da6d5efdb08abbd42913a8c17931bb06b8424f37f0a99484117fd880b721fed0dceed310c07e12f64ae22b5b63fb2bc8e3b189c2f3072c661545c49e0d0a0320b90f89cd7474db3d6094ec875a18e7c7f9a51fa7736a502789f73cec6b3be93dd69b98a9d4926957e2fdc91e3e7ec0936798378d52bf874cbcb746ca2b4aab584033f8ed873ad633d101c899c3871505bcc45859f8857ce5bdc12dc667b31777608a1ec97303f3810df65503facfab30837cf7dfdfe17cba93775775ee3a631ef96795dc3a1616f2f85112f3f6558fb21ab6752281066c4d864a68638cb42e539b3e19b583c130b898a5c5acfaafaf48cb7f61f8a41195aa4288c566</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实习记录3-3</title>
    <link href="/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-3/"/>
    <url>/%E5%AE%9E%E4%B9%A0%E8%AE%B0%E5%BD%953-3/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="0e4c7a4199a71549f9f0768e1adb486d44edd2ac52583ebdf6e3b00630dadcfd">281243a4c852def009ab246a1c5a8bfdc91a99208d5df7f9cc4b065404c9de8ebd54d003f221753d2806c7935e1f6f1bd6a330e6d7003f19782ce16acf785f132c2a20088d0e236bdaa9b57c6a1b6e1542f83f38bf50fa5f218c79358645f6a5b3bccdea0c33aa23273be26188244deeeb085b7941426f7bdd2b0a384446246fd807e7f8c5da2fb88981bc4739c66678c1ea2f00f3d4a4f15a111b2a1df923b3750f0f9891a5012681844fca32fef56dffcb71c36f86844135fd91944c00180729bfce49fd8840ae51fd86f1e8777fa3649496dc1f96da9cee21c0682fa6a4709e0ed2588257bfb64e6422ca390208856a82dfda4fd5e25500b8c735760a62b00b8c32468fc4336ddd529b605ad37f879854871069eb48260f409b733abe532252cf873e2b40288ee539ad6e326d0025535f26f980eb5c6311337cb65c8f030861dd1515297c993e6084cb21fd85cb4adf7512f98311e4e3974dde114ddf2bf1e61c343f04d4bde17a0a59392f27a78bcafa64658150ad7ec9dd76a6c0adf835a30be150c5c8108398564e084283d3f911df90f18a73383da2ec32e8fbd02a03b4cc7689cba0ca1cb2416f005430f51f1244c4b38bb2eb557c3902de9527a6fd4945caedf1f3ed400b579dcca900de4c484619e6a0b8b223867f362e6d31f82a47574780c55b5b55f27012a015fbf3ca01e1960287ab3c39eee1b6770ada7f59b0c850efabf76d58451058a731bc238512224f5ef6ba90a8d8faed95c7ea383fa5eabe1f7413e8346734dd2680edc53481fc419fac89072bd18f0cb21d5e4582eea861a6c81e43ca8e6611ed5ed27a360c471e8f8e0d9e9e5e4556798d3bdd8509da7f6cfd75301759a1db179d12b072904f2a885b7f6b6d4da939b4a3283768aa657034120ef2e86781fa4acd0ae6da19282dd749a6cab6c6b6e34f6ef39ae0765ba1bba0efd742cb7eda5a261e66a3f98766826d57b45f814135b2c60e8eb202bcd25eaf8c010dc8ca8c23bcfc51e2d781e0f1fcc247ee75f85aa1ca74cffd1079c466af098b82317031cca24cf2d22e7626e7ee13e6decf1e6ac31822a7ef4491c1a690865eb2223cc791a99d82f67f25ed7b73c3598d5b930776b83bd0048714e006e46524e6e5cd698601ced0fdaf88be3e19ab2e55187cab891a3377d5262f1585dd560a1c3d1cfb6171e47ad1c367fc02ddc54c373602808fd69744c9287a03f92965d68c97145c3584ad507cd6906014570fd5e259bc4fdc8b4b1b9982a48cb04bd7878eeea364d2d0e734efd3339d1414c6f131ba15e2572914d040a294555dd4b10dad6d8fa7a44ac404c3bbe1e0a64c9437668517810a73b7362d4576e5071f54da9d294faadca90d3677a6a70f80043bdc7a5d02903e4f1e76f233b3719d963f1bb64bde6f7d6fe866374296fa3afa1924fb1e0f405f126cb6282a500596d7676b1535973fc67f8f10be0a359a8b13a5dd9723d00d4fb4e52f4763c1f2c9d944832e7ff831b7c35f1398a5e94c4903be1348b4370ad72e3319ba22d495f00590f22f462fbd923068f252155dc896fd2a87ab9c5b12a1d9528dd84619e60065ec3ad316b3369de68e1cfc3f94d9b30001ffca6724767b4a511f240bc6ee4e2ce6076171c6d02616e60dee0eb42a9599cc26874b3b27805398069f0d8665177ea7096d23ab9b5ae1016301f434877fba33d084b8e3282e4950cfa7e89c4a0a91f12633da5772d5134883480549f204fb051edabb1b18c51c651ecc8acbb447930735bf841cdd0d4f7c933e97e04314322b8ba0ed40670d16cf7769b3ef905dcbf05fd80a1d9627e7c7f6640da4169bf1c5c795d7487e54967ac0393bacad7d34a28d5f2c49a63740bdea0da6d1951f13b929d4a49aa79656511635701e35297b65742ec0dbe06ffc720b81197a618d3292f6391a48b8f7a62660843d25fe57325497590b1e08e445b00a7c45dc3a2c48810f7d0b734ccff998ad0108f1662b767cf7e407ffeb959a4523115316912c1ce4ef64ed4e095a86cd7c62b01ae36cf0b0d8ddf3ad3b39f9fc2dbc422ac62f7d4ce5416f220778307b88e7e09df22735a734ff04b37ee9d66637a57c0646d2845524edc00c981ef054a6db20629a76201eb42360a94d02b43986c03a8ec9dd7b8f8ceb817dce836cb34a6f49ee2db90ab3e95c04042c2d371ed30441b7c4e174524be1232975ddaebb349a72e443641cc1d7150780ab7e4333055629f74144d5418bc002eaa89aabe2ab04465b9daba9102c54815aaca249866558039993b47ba3822c8a3db1883211c74821db458ef15d35e82ceeb861e19bc66e663b0f9dc1e4f4e12914448938d489c09ec0d2fef58f20590b96e7c3bf2cc50a888bd1b47a477a1c94ea6d0a486f8eab6f87007d44db2bdd2b0fede8fa5a477092f827d24d61f48eef922d38f4da6649ebbd6d58ca1d5f97ed19f758881b687b178cc2d9a94aa7e2c304b0b202dd41e2a1e3f0a33fa1f8400cc746ac77301347424ed09b85236f7d48822f0514cae15a2114bef0a975cd744ee092a4e3d20ffbab2b7def5e353963266741c743ed8f64bd70f5b414e5d975baa0dfd795f71d75a01d5e04a3985753710955f37394e1caaa3eefca6e45b8a5bdf2d8ea97f6a1eb83e8edb3e9a90d40a0927735786b36e802b05cb47b122bcef92ddb23d9ebeeb0df1c505e1a8ed7ea9634b0144e627083d65e943207b2f16f0be18784ec26d71bd79e6ee71ec2bd3ffbe777c7e4fcfadd8db1ca4998d4707f372195bd64db6be512147c649dc9f16c7a90dabc28bf0334fac1b9f4706f80a079ae21f66b1b83f038ad03a81e1d2e41e762239b145f26a782da7e83f486bccc9a9c04a1e83e0d2b19b5993e801f86207921c8601f2ff87701ec1166af1e931040225914e333a1d84c41cc0fe98182fa6bb7681fb95244241edb5243bfda5ebfa6a9a1d35b294f071b9bcfc2400c6f7e54a0a5841d969952cd3baebbc7caf4bbf9311e472b5e2ab946cf05a60589dbc552c6bced662ba9a7eb12a7ebb7fd17eb16b40f897c7d0c137647ced7be4938fcebd595cdbc80b1c711bfcc873c28bdaff47632068704de8b2949919e80924ba9b21532096fb9dac1c25d3948dbbe9188fd9e2e577e5bf70a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码以查看文章内容">请输入密码以查看文章内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
      <category>实习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vi/vim（单次/永久）显示行号</title>
    <link href="/vi-vim%EF%BC%88%E5%8D%95%E6%AC%A1-%E6%B0%B8%E4%B9%85%EF%BC%89%E6%98%BE%E7%A4%BA%E8%A1%8C%E5%8F%B7/"/>
    <url>/vi-vim%EF%BC%88%E5%8D%95%E6%AC%A1-%E6%B0%B8%E4%B9%85%EF%BC%89%E6%98%BE%E7%A4%BA%E8%A1%8C%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<p>Linux的vi&#x2F;vim编辑器中显示行号（单次&#x2F;永久）</p><span id="more"></span><h2 id="单次"><a href="#单次" class="headerlink" title="单次"></a>单次</h2><p><code>vi/vim 文件名</code>进入命令模式后，输入<code>:set number</code>或<code>:set nu</code></p><h2 id="永久"><a href="#永久" class="headerlink" title="永久"></a>永久</h2><p><code>echo set number &gt;&gt; ~/.vimr</code>或<code>echo set nu &gt;&gt; ~/.vimrc</code></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Shell</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid配置首页头像、一言（打字机效果）</title>
    <link href="/Hexo-Fluid%E9%85%8D%E7%BD%AE%E9%A6%96%E9%A1%B5%E5%A4%B4%E5%83%8F%E3%80%81%E4%B8%80%E8%A8%80%EF%BC%88%E6%89%93%E5%AD%97%E6%9C%BA%E6%95%88%E6%9E%9C%EF%BC%89/"/>
    <url>/Hexo-Fluid%E9%85%8D%E7%BD%AE%E9%A6%96%E9%A1%B5%E5%A4%B4%E5%83%8F%E3%80%81%E4%B8%80%E8%A8%80%EF%BC%88%E6%89%93%E5%AD%97%E6%9C%BA%E6%95%88%E6%9E%9C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="配置头像"><a href="#配置头像" class="headerlink" title="配置头像"></a>配置头像</h1><ol><li>在主题目录下的<code>scripts</code> 文件夹下新建 <code>Avatar.js</code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Description: Adds a custom avatar to the top of the page</span><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;head_begin&#x27;</span>, <span class="hljs-string">&#x27;&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/my-avatar.css&quot;&gt;&#x27;</span>, <span class="hljs-string">&#x27;default&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li>在主题目录下的<code>source/css</code> 文件夹下新建 <code>my-avatar.css</code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.my-avatar</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>); <span class="hljs-comment">/* 鼠标悬停时旋转 */</span><br>&#125;<br><br><span class="hljs-selector-class">.my-avatar</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">150px</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;   <span class="hljs-comment">/* 将图片圆形化 */</span><br>  <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.5s</span>; <span class="hljs-comment">/* 过渡效果 */</span><br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">50px</span>;  <span class="hljs-comment">/* 与下面的文字对齐 */</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li>修改主题配置文件 <code>_config.fluid.yml</code><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span> <br>  <span class="hljs-comment"># 首页副标题的独立设置</span><br>  <span class="hljs-comment"># Independent config of home page subtitle</span><br>  <span class="hljs-attr">slogan:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>    <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>    <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;&lt;img src=&#x27;/img/图片名.后缀&#x27; class=&#x27;my-avatar&#x27; /&gt; &lt;br /&gt; 欢迎语&quot;</span><br></code></pre></td></tr></table></figure></li><li>把头像图放到主题目录下的 <code>source/img</code> 文件夹下，名称同步上面的<code>图片名.后缀</code>。</li></ol><h1 id="配置一言"><a href="#配置一言" class="headerlink" title="配置一言"></a>配置一言</h1><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/Okita1027/blog-images/2024/05/invaild-default.png" alt="配置多参数不生效"></div><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/Okita1027/blog-images/2024/05/hitokoto-example.png" alt="一言接口示例"></div></div></div><ul><li>现状：官方提供的配置能够请求接口获取JSON数据，但只能选定<strong>其中一个字段</strong>在首页渲染，此时我希望能同时保留<code>hitokoto</code>、<code>from_who</code>、<code>from</code>。</li><li>解决方案：修改打字机程序<code>typed.ejs</code>，有背景色的是可能需要修改的代码。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;% <span class="hljs-keyword">if</span>(theme.<span class="hljs-property">fun_features</span>.<span class="hljs-property">typing</span>.<span class="hljs-property">enable</span> &amp;&amp; <span class="hljs-title function_">in_scope</span>(theme.<span class="hljs-property">fun_features</span>.<span class="hljs-property">typing</span>.<span class="hljs-property">scope</span>) &amp;&amp; page.<span class="hljs-property">subtitle</span> !== <span class="hljs-literal">false</span>) &#123; %&gt;<br>  &lt;%- <span class="hljs-title function_">js_ex</span>(theme.<span class="hljs-property">static_prefix</span>.<span class="hljs-property">typed</span>, <span class="hljs-string">&#x27;/typed.min.js&#x27;</span>) %&gt;<br><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">      (<span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">var</span> typing = <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">plugins</span>.<span class="hljs-property">typing</span>;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">var</span> subtitle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;subtitle&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">if</span> (!subtitle || !typing) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-keyword">return</span>;</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-keyword">var</span> text = subtitle.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-typed-text&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">          &lt;% <span class="hljs-keyword">if</span> (<span class="hljs-title function_">is_home</span>() &amp;&amp; theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span> &amp;&amp; theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">enable</span>) &#123; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">          jQuery.<span class="hljs-title function_">ajax</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;&lt;%= theme.index.slogan.api.method %&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%- theme.index.slogan.api.url %&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">headers</span>: &lt;%- <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">headers</span> || &#123;&#125;) %&gt;,</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,</span></span><br><mark><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-comment">// 打字机输出内容</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-keyword">var</span> apiText;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-comment">// 一言、来源作品、发言人</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-keyword">var</span> hitokoto, <span class="hljs-keyword">from</span>, fromWho;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-comment">// 从一言接口得到的JSON结果</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  <span class="hljs-keyword">if</span> (result) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-comment">// 需要的结果字段名，取决于_config[.主题名称].yml中的配置</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-keyword">var</span> keys = <span class="hljs-string">&#x27;&lt;%= theme.index.slogan.api.keys %&gt;&#x27;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>);</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-keyword">if</span> (result <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Array</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          <span class="hljs-comment">// 得到 去掉外层&#123;&#125;的 数据</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          result = result[<span class="hljs-number">0</span>];</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-comment">// 取出实际展示的字段</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> k <span class="hljs-keyword">of</span> keys) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          <span class="hljs-keyword">var</span> value = result[k];</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> value === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              <span class="hljs-keyword">if</span> (hitokoto == <span class="hljs-literal">null</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                                  hitokoto = value;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">from</span> == <span class="hljs-literal">null</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                                  <span class="hljs-keyword">from</span> = value</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (fromWho == <span class="hljs-literal">null</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                                  fromWho = value;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Object</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              result = value;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-comment">// 头像</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      apiText = <span class="hljs-string">&quot;&lt;img src=&#x27;/img/avatar-gray.png&#x27; class=&#x27;my-avatar&#x27; /&gt;&quot;</span>;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-comment">// 样式</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      apiText += <span class="hljs-string">&#x27;&lt;p style=&quot;font-size: 30px; text-align: center&quot;&gt;『&amp;#12288;&#x27;</span> + hitokoto + <span class="hljs-string">&#x27;』&lt;/p&gt;&#x27;</span> +</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                              <span class="hljs-string">&#x27;&lt;p style=&quot;margin-top: 15px; text-align: right; font-size: 24px; color: #e0e0e0&quot;&gt;——&#x27;</span>;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-comment">// 一言的发言人可能未知</span></span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      <span class="hljs-keyword">if</span> (fromWho != <span class="hljs-literal">null</span>) &#123;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                          apiText += fromWho;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                      apiText += <span class="hljs-string">&#x27;「&#x27;</span> + <span class="hljs-keyword">from</span> + <span class="hljs-string">&#x27;」&lt;/p&gt;&#x27;</span>;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  &#125;</span></span></mark><br><mark><span class="language-javascript"><span class="language-xml">                  apiText ? <span class="hljs-title function_">typing</span>(apiText) : <span class="hljs-title function_">typing</span>(text);</span></span></mark><br><span class="language-javascript"><span class="language-xml">              &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-attr">error</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">xhr, status, error</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-keyword">if</span> (error) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Failed to request &lt;%= theme.index.slogan.api.url %&gt;:&#x27;</span>, error);</span></span><br><span class="language-javascript"><span class="language-xml">                  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-title function_">typing</span>(text);</span></span><br><span class="language-javascript"><span class="language-xml">              &#125;</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">          &lt;% &#125; <span class="hljs-keyword">else</span> &#123; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-title function_">typing</span>(text);</span></span><br><span class="language-javascript"><span class="language-xml">          &lt;% &#125; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;)(<span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span>);</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;% &#125; %&gt; <br></code></pre></td></tr></table></figure></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://developer.hitokoto.cn/sentence/demo.html">一言开发者中心</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.fluid-dev.com/docs/guide/#slogan-%E6%89%93%E5%AD%97%E6%9C%BA">Fluid官方打字机配置</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="https://blog.ayaka.space/2024/01/From-Halo-To-Hexo/#2%EF%BC%89Hexo">从Halo迁移到Hexo，放弃变质的Halo博客</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HelloWorld</title>
    <link href="/HelloWorld/"/>
    <url>/HelloWorld/</url>
    
    <content type="html"><![CDATA[<p>这一段文字是摘要，显示在主页和文章页</p><span id="more"></span><h1 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h1><p>Hexo 对 <a href="https://github.com/highlightjs/highlight.js">highlight.js</a> 与 <a href="https://github.com/PrismJS/prism">prismjs</a> 两种代码高亮库提供内建支持。 本篇教程将展示如何将 Hexo 的内建语法高亮组件整合至你的模板中。</p><h2 id="如何插入代码块"><a href="#如何插入代码块" class="headerlink" title="如何插入代码块"></a>如何插入代码块</h2><p>Hexo 支持两种代码块写法——<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">代码块标签插件</a>和<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%8F%8D%E5%BC%95%E5%8F%B7%E4%BB%A3%E7%A0%81%E5%9D%97">反引号代码块标签插件</a>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs HEXO">&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;<br>code snippet<br>&#123;% endcodeblock %&#125;<br><br>&#123;% code [title] [lang:language] [url] [link text] [additional options] %&#125;<br>code snippet<br>&#123;% endcode %&#125;<br><br>```[language] [title] [url] [link text] [additional options]<br>code snippet<br>```<br></code></pre></td></tr></table></figure><p>上面的第三种是 Markdown 的 fenced code block 语法。 Hexo 对其进行了扩展，使其支持更多特性。 在<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97">标签插件文档</a>中你可以找到可用的选项。</p><blockquote><p>[!TIP]</p><p>Hexo 支持用任何格式书写文章，只需安装相应渲染插件即可。 可以使用 markdown、ejs、swig、nunjucks、pug、asciidoc 等。 无论使用哪种格式，这三种代码块语法始终可用。</p></blockquote><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>这是一段脚注</p><!-- 空一行 --><pre><code class="hljs">Indent paragraphs to include them in the footnote.`&#123; my code &#125;`Add as many paragraphs as you like.</code></pre><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><dl><dt>First Term</dt><dd>This is the definition of the first term.</dd></dl><dl><dt>Second Term<br>: This is one definition of the second term.</dt><dd>This is another definition of the second term.</dd></dl><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><ul><li><input checked="" disabled="" type="checkbox"> Write the press release</li><li><input disabled="" type="checkbox"> Update the website</li><li><input disabled="" type="checkbox"> Contact the media</li></ul><h2 id="使用-Emoji-表情"><a href="#使用-Emoji-表情" class="headerlink" title="使用 Emoji 表情"></a>使用 Emoji 表情</h2><p>😂</p><h2 id="Tag插件"><a href="#Tag插件" class="headerlink" title="Tag插件"></a>Tag插件</h2><h3 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h3><p>在markdown中加入如下代码使用便签</p><div class="note note-success">            <p>文字或者<code>markdown</code>都可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure>          </div><h3 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h3><span class="label label-primary">123</span><h3 id="折叠块"><a href="#折叠块" class="headerlink" title="折叠块"></a>折叠块</h3>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-0d0df90d" role="button" aria-expanded="false" aria-controls="collapse-0d0df90d">        <div class="fold-arrow">▶</div>这是标题      </div>      <div class="fold-collapse collapse" id="collapse-0d0df90d">        <div class="fold-content">          <p>需要折叠的一段内容，支持markdown</p>        </div>      </div>    </div><h3 id="勾选框"><a href="#勾选框" class="headerlink" title="勾选框"></a>勾选框</h3>            <input type="checkbox"  checked="checked">text          <h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><a class="btn" href="https://www.baidu.com"  title="百度" target="_blank">去百度</a><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p><img src="/./HelloWorld/%E8%8A%B1%E5%AB%81%E5%85%89%E8%BE%89.jpg" alt="花嫁光辉"><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://pan.baidu.com/">https://pan.baidu.com</a> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://yiyan.baidu.com/">https://yiyan.baidu.com</a><br><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
